sentence 1 --> Making Content Services Smarter Using NLP  WHITE PAPER MAKING CONTENT SERVICES  SMARTER USING NLP Abstract There is an exponential growth in unstructured content due to  digitization, IoT, regulatory compliance, etc. 

 TOKEN ---> Making
 LEMA ---> make
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Smarter
 LEMA ---> Smarter
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> WHITE
 LEMA ---> WHITE
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PAPER
 LEMA ---> paper
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> MAKING
 LEMA ---> making
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> CONTENT
 LEMA ---> CONTENT
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> SERVICES
 LEMA ---> SERVICES
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> SMARTER
 LEMA ---> smart
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> USING
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Abstract
 LEMA ---> Abstract
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> There
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> exponential
 LEMA ---> exponential
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> growth
 LEMA ---> growth
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unstructured
 LEMA ---> unstructured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> due
 LEMA ---> due
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> digitization
 LEMA ---> digitization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> IoT
 LEMA ---> IoT
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> regulatory
 LEMA ---> regulatory
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> compliance
 LEMA ---> compliance
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Making', 'Content', 'Services', 'Smarter', 'NLP', ' ', 'WHITE', 'PAPER', 'MAKING', 'CONTENT', 'SERVICES', ' ', 'SMARTER', 'NLP', 'Abstract', 'exponential', 'growth', 'unstructured', 'content', ' ', 'digitization', ',', 'IoT', ',', 'regulatory', 'compliance', ',', 'etc', '.']

 TOTAL FILTERED TOKENS ==> 29 


 --- NER --- 

NLP==> ORG


IoT==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP  WHITE PAPER MAKING, CONTENT, SERVICES, NLP Abstract, an exponential growth, unstructured content,  digitization, regulatory compliance] 

 TOTAL NOUN CHUNKS --> 8
 ************************************************** 

sentence 2 --> Because of this growth,  organizations are facing challenges, on how to capture, ingest and  manage huge volume of unstructured content effectively in Content  Services platform. 

 TOKEN ---> Because
 LEMA ---> because
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> growth
 LEMA ---> growth
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> organizations
 LEMA ---> organization
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> facing
 LEMA ---> face
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> how
 LEMA ---> how
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capture
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingest
 LEMA ---> ingest
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> manage
 LEMA ---> manage
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> huge
 LEMA ---> huge
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> volume
 LEMA ---> volume
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unstructured
 LEMA ---> unstructured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> effectively
 LEMA ---> effectively
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> platform
 LEMA ---> platform
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['growth', ',', ' ', 'organizations', 'facing', 'challenges', ',', 'capture', ',', 'ingest', ' ', 'manage', 'huge', 'volume', 'unstructured', 'content', 'effectively', 'Content', ' ', 'Services', 'platform', '.']

 TOTAL FILTERED TOKENS ==> 22 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [this growth,  organizations, challenges, huge volume, unstructured content, Content  Services platform] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 3 --> Traditional approaches are becoming ineffective.   

 TOKEN ---> Traditional
 LEMA ---> traditional
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> approaches
 LEMA ---> approach
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> becoming
 LEMA ---> become
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ineffective
 LEMA ---> ineffective
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Traditional', 'approaches', 'ineffective', '.', ' ']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Traditional approaches] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 4 --> Need of the hour is to address these challenges differently and bring  some “intelligence”, so that Content Services platforms can manage  the unstructured content smartly. 

 TOKEN ---> Need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> hour
 LEMA ---> hour
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> address
 LEMA ---> address
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> differently
 LEMA ---> differently
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> bring
 LEMA ---> bring
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> some
 LEMA ---> some
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> intelligence
 LEMA ---> intelligence
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> so
 LEMA ---> so
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> platforms
 LEMA ---> platform
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> manage
 LEMA ---> manage
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unstructured
 LEMA ---> unstructured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> smartly
 LEMA ---> smartly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Need', 'hour', 'address', 'challenges', 'differently', 'bring', ' ', '“', 'intelligence', '”', ',', 'Content', 'Services', 'platforms', 'manage', ' ', 'unstructured', 'content', 'smartly', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the hour, these challenges, some “intelligence, Content Services platforms, the unstructured content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 5 --> This paper discusses how Natural Language Processing (NLP) can  make a difference in Content Services by addressing challenges  which are being faced. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> paper
 LEMA ---> paper
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> discusses
 LEMA ---> discuss
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> how
 LEMA ---> how
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Natural
 LEMA ---> Natural
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Language
 LEMA ---> Language
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Processing
 LEMA ---> Processing
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> make
 LEMA ---> make
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> difference
 LEMA ---> difference
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> addressing
 LEMA ---> address
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> being
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBG
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> faced
 LEMA ---> face
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['paper', 'discusses', 'Natural', 'Language', 'Processing', '(', 'NLP', ')', ' ', 'difference', 'Content', 'Services', 'addressing', 'challenges', ' ', 'faced', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

Natural Language Processing==> WORK_OF_ART


NLP==> ORG


Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This paper, Natural Language Processing, NLP, a difference, Content Services, challenges] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 6 --> Here, we will first introduce NLP and then  briefly describe how NLP can be used in Content Services while  capturing, ingesting and managing. 

 TOKEN ---> Here
 LEMA ---> here
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> we
 LEMA ---> we
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> first
 LEMA ---> first
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> introduce
 LEMA ---> introduce
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> briefly
 LEMA ---> briefly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> describe
 LEMA ---> describe
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> how
 LEMA ---> how
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> while
 LEMA ---> while
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> capturing
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingesting
 LEMA ---> ingest
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> managing
 LEMA ---> manage
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [',', 'introduce', 'NLP', ' ', 'briefly', 'describe', 'NLP', 'Content', 'Services', ' ', 'capturing', ',', 'ingesting', 'managing', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

first==> ORDINAL


NLP==> ORG


NLP==> ORG


Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [we, NLP, NLP, Content Services] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 7 -->  1.1 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 1.1
 LEMA ---> 1.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '1.1']

 TOTAL FILTERED TOKENS ==> 2 


 --- NER --- 

1.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 8 --> What is NLP Natural language processing is a subfield  of artificial intelligence, dealing with the  interactions between computers and  human languages, in particular on how to  program computers to process and analyze  large amounts of natural language data. 

 TOKEN ---> What
 LEMA ---> what
 POS TAG ---> PRON
 TAG  ---> WP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Natural
 LEMA ---> Natural
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> language
 LEMA ---> language
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> subfield
 LEMA ---> subfield
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> artificial
 LEMA ---> artificial
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> intelligence
 LEMA ---> intelligence
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> dealing
 LEMA ---> deal
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> interactions
 LEMA ---> interaction
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> between
 LEMA ---> between
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> computers
 LEMA ---> computer
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> human
 LEMA ---> human
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> languages
 LEMA ---> language
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> particular
 LEMA ---> particular
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> how
 LEMA ---> how
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> program
 LEMA ---> program
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> computers
 LEMA ---> computer
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> analyze
 LEMA ---> analyze
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> large
 LEMA ---> large
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> amounts
 LEMA ---> amount
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> natural
 LEMA ---> natural
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> language
 LEMA ---> language
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> data
 LEMA ---> datum
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'Natural', 'language', 'processing', 'subfield', ' ', 'artificial', 'intelligence', ',', 'dealing', ' ', 'interactions', 'computers', ' ', 'human', 'languages', ',', 'particular', ' ', 'program', 'computers', 'process', 'analyze', ' ', 'large', 'amounts', 'natural', 'language', 'data', '.']

 TOTAL FILTERED TOKENS ==> 30 


 --- NER --- 

NLP Natural==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [What, NLP Natural language processing, a subfield, artificial intelligence, the  interactions, computers,  human languages, program computers, large amounts, natural language data] 

 TOTAL NOUN CHUNKS --> 10
 ************************************************** 

sentence 9 -->  NLP includes text preprocessing, sentence  segmentation, tokenization, POS tagging,  Named Entity Recognition (NER), chunking,  parsing, co-reference resolution and text  categorizer. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> includes
 LEMA ---> include
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> preprocessing
 LEMA ---> preprocessing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sentence
 LEMA ---> sentence
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> segmentation
 LEMA ---> segmentation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tokenization
 LEMA ---> tokenization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> POS
 LEMA ---> POS
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagging
 LEMA ---> tagging
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Named
 LEMA ---> Named
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Entity
 LEMA ---> Entity
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Recognition
 LEMA ---> Recognition
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> chunking
 LEMA ---> chunk
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> parsing
 LEMA ---> parse
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> co
 LEMA ---> co
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reference
 LEMA ---> reference
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> resolution
 LEMA ---> resolution
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'NLP', 'includes', 'text', 'preprocessing', ',', 'sentence', ' ', 'segmentation', ',', 'tokenization', ',', 'POS', 'tagging', ',', ' ', 'Named', 'Entity', 'Recognition', '(', 'NER', ')', ',', 'chunking', ',', ' ', 'parsing', ',', 'co', '-', 'reference', 'resolution', 'text', ' ', 'categorizer', '.']

 TOTAL FILTERED TOKENS ==> 36 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ NLP, text preprocessing, sentence  segmentation, tokenization, POS tagging, Named Entity Recognition, (NER, categorizer] 

 TOTAL NOUN CHUNKS --> 8
 ************************************************** 

sentence 10 --> In this white paper we will  focus on NER and categorizer. 

 TOKEN ---> In
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> white
 LEMA ---> white
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> paper
 LEMA ---> paper
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> we
 LEMA ---> we
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> focus
 LEMA ---> focus
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['white', 'paper', ' ', 'focus', 'NER', 'categorizer', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [this white paper, we, NER, categorizer] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 11 -->  1.1.1 Named Entity Recognition (NER) Named Entity Recognition, is for  identifying the entities in unstructured  content. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 1.1.1
 LEMA ---> 1.1.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Named
 LEMA ---> Named
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Entity
 LEMA ---> Entity
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Recognition
 LEMA ---> Recognition
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Named
 LEMA ---> Named
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Entity
 LEMA ---> Entity
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Recognition
 LEMA ---> Recognition
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> identifying
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unstructured
 LEMA ---> unstructured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '1.1.1', 'Named', 'Entity', 'Recognition', '(', 'NER', ')', 'Named', 'Entity', 'Recognition', ',', ' ', 'identifying', 'entities', 'unstructured', ' ', 'content', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

1.1.1==> CARDINAL


Named Entity Recognition==> WORK_OF_ART


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Named Entity Recognition, (NER, Named Entity Recognition, the entities, unstructured  content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 12 --> Entities such as name, person,  location, time, money are few of the  common entities which can be extracted. 

 TOKEN ---> Entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> person
 LEMA ---> person
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> location
 LEMA ---> location
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> money
 LEMA ---> money
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> few
 LEMA ---> few
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> common
 LEMA ---> common
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extracted
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Entities', ',', 'person', ',', ' ', 'location', ',', 'time', ',', 'money', ' ', 'common', 'entities', 'extracted', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Entities, name, person,  location, time, money, the  common entities] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 13 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 14 --> Apart from these, models can be trained  to extract business specific entities such as  account number, tax file number specific  to the business. 

 TOKEN ---> Apart
 LEMA ---> apart
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extract
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> specific
 LEMA ---> specific
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> account
 LEMA ---> account
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> number
 LEMA ---> number
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tax
 LEMA ---> tax
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> number
 LEMA ---> number
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> specific
 LEMA ---> specific
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Apart', ',', 'models', 'trained', ' ', 'extract', 'business', 'specific', 'entities', ' ', 'account', 'number', ',', 'tax', 'file', 'number', 'specific', ' ', 'business', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [models, business specific entities,  account number, the business] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 15 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 16 --> Core capability of NER is,  classification and extraction of the named  entities. 

 TOKEN ---> Core
 LEMA ---> Core
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capability
 LEMA ---> capability
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> classification
 LEMA ---> classification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extraction
 LEMA ---> extraction
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> named
 LEMA ---> name
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Core', 'capability', 'NER', ',', ' ', 'classification', 'extraction', 'named', ' ', 'entities', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

Core==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Core capability, NER,  classification, extraction, the named  entities] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 17 --> NER can extract static as well as  dynamic entities. 

 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extract
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> static
 LEMA ---> static
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> well
 LEMA ---> well
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> dynamic
 LEMA ---> dynamic
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NER', 'extract', 'static', ' ', 'dynamic', 'entities', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NER, dynamic entities] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 18 --> 1.1.2 

 TOKEN ---> 1.1.2
 LEMA ---> 1.1.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['1.1.2']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 19 --> Categorizer Core capability of categorizer is  classification. 

 TOKEN ---> Categorizer
 LEMA ---> Categorizer
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Core
 LEMA ---> Core
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capability
 LEMA ---> capability
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> classification
 LEMA ---> classification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Categorizer', 'Core', 'capability', 'categorizer', ' ', 'classification', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

Categorizer Core==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Categorizer Core capability, categorizer,  classification] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 20 --> It helps in  categorizing a  chunk of unstructured text into predefined  categories. 

 TOKEN ---> It
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> helps
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> categorizing
 LEMA ---> categorize
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> chunk
 LEMA ---> chunk
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unstructured
 LEMA ---> unstructured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> predefined
 LEMA ---> predefine
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> categories
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['helps', ' ', 'categorizing', ' ', 'chunk', 'unstructured', 'text', 'predefined', ' ', 'categories', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [It, a  chunk, unstructured text, predefined  categories] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 21 --> For example, categorizer  models can be used to categorize news  articles into different genre, sentiment  analysis of messages, identifying  the custom document types for an  organization, etc. using the predefined  category phrases, categorizer can best  classify the content. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorize
 LEMA ---> categorize
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> news
 LEMA ---> news
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  prep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> articles
 LEMA ---> article
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> genre
 LEMA ---> genre
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sentiment
 LEMA ---> sentiment
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> analysis
 LEMA ---> analysis
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> messages
 LEMA ---> message
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identifying
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> custom
 LEMA ---> custom
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> types
 LEMA ---> type
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> organization
 LEMA ---> organization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> predefined
 LEMA ---> predefine
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> best
 LEMA ---> well
 POS TAG ---> ADV
 TAG  ---> RBS
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> classify
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ',', 'categorizer', ' ', 'models', 'categorize', 'news', ' ', 'articles', 'different', 'genre', ',', 'sentiment', ' ', 'analysis', 'messages', ',', 'identifying', ' ', 'custom', 'document', 'types', ' ', 'organization', ',', 'etc', '.', 'predefined', ' ', 'category', 'phrases', ',', 'categorizer', 'best', ' ', 'classify', 'content', '.']

 TOTAL FILTERED TOKENS ==> 38 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, categorizer  models, news, articles, different genre, sentiment,  analysis, messages, the custom document types, an  organization, the predefined  category phrases, categorizer, the content] 

 TOTAL NOUN CHUNKS --> 13
 ************************************************** 

sentence 22 --> 1.2 Terminology  1.2.1 Entity Entity is a singular, identifiable and  separate object. 

 TOKEN ---> 1.2
 LEMA ---> 1.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Terminology
 LEMA ---> terminology
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 1.2.1
 LEMA ---> 1.2.1
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Entity
 LEMA ---> Entity
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Entity
 LEMA ---> Entity
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> singular
 LEMA ---> singular
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identifiable
 LEMA ---> identifiable
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> separate
 LEMA ---> separate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> object
 LEMA ---> object
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['1.2', 'Terminology', ' ', '1.2.1', 'Entity', 'Entity', 'singular', ',', 'identifiable', ' ', 'separate', 'object', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

1.2.1==> DATE


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [1.2 Terminology  1.2.1 Entity Entity, a singular, identifiable and  separate object] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 23 --> For example; name of a  person, organization, city, account number,  TFN number can be considered as an  entity. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ;
 LEMA ---> ;
 POS TAG ---> PUNCT
 TAG  ---> :
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> person
 LEMA ---> person
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> organization
 LEMA ---> organization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> city
 LEMA ---> city
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> account
 LEMA ---> account
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> number
 LEMA ---> number
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> TFN
 LEMA ---> tfn
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> number
 LEMA ---> number
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> considered
 LEMA ---> consider
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> entity
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ';', ' ', 'person', ',', 'organization', ',', 'city', ',', 'account', 'number', ',', ' ', 'TFN', 'number', 'considered', ' ', 'entity', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, name, a  person, organization, city, account number, TFN number, an  entity] 

 TOTAL NOUN CHUNKS --> 8
 ************************************************** 

sentence 24 --> 1.2.2 Entity Relationship   

 TOKEN ---> 1.2.2
 LEMA ---> 1.2.2
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Entity
 LEMA ---> Entity
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Relationship
 LEMA ---> Relationship
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['1.2.2', 'Entity', 'Relationship', ' ']

 TOTAL FILTERED TOKENS ==> 4 


 --- NER --- 

1.2.2==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [1.2.2 Entity Relationship] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 25 --> The semantic relationship between two  different entities are called as entity  relationship. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> semantic
 LEMA ---> semantic
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> relationship
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> between
 LEMA ---> between
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> two
 LEMA ---> two
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> called
 LEMA ---> call
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entity
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> relationship
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['semantic', 'relationship', ' ', 'different', 'entities', 'called', 'entity', ' ', 'relationship', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

two==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The semantic relationship, two  different entities, entity  relationship] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 26 --> For example; relationship  between a person name and an  organization is “employed by”. 1.2.3 Annotation Annotation is a process, in which, the  information of interest is tagged with an  entity name. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ;
 LEMA ---> ;
 POS TAG ---> PUNCT
 TAG  ---> :
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> relationship
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> between
 LEMA ---> between
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> person
 LEMA ---> person
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> organization
 LEMA ---> organization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> employed
 LEMA ---> employ
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 1.2.3
 LEMA ---> 1.2.3
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Annotation
 LEMA ---> Annotation
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Annotation
 LEMA ---> Annotation
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> interest
 LEMA ---> interest
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> entity
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ';', 'relationship', ' ', 'person', ' ', 'organization', '“', 'employed', '”', '.', '1.2.3', 'Annotation', 'Annotation', 'process', ',', ',', ' ', 'information', 'interest', 'tagged', ' ', 'entity', '.']

 TOTAL FILTERED TOKENS ==> 24 


 --- NER --- 

Annotation Annotation==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, relationship, a person name, an  organization, 1.2.3 Annotation Annotation, a process, the  information, interest, an  entity name] 

 TOTAL NOUN CHUNKS --> 9
 ************************************************** 

sentence 27 --> For example, John is tagged  with the entity “person_name”. 1.2.4 Labeled Content Labeled content is the content, whose  classification category and/or entities  are already known and which can serve  as “training content” for training the AI  models. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> John
 LEMA ---> John
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entity
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> person_name
 LEMA ---> person_name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 1.2.4
 LEMA ---> 1.2.4
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Labeled
 LEMA ---> Labeled
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> whose
 LEMA ---> whose
 POS TAG ---> DET
 TAG  ---> WP$
 DEPENDENCY  --->  poss
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> classification
 LEMA ---> classification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and/or
 LEMA ---> and/or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> already
 LEMA ---> already
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> known
 LEMA ---> know
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> serve
 LEMA ---> serve
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> training
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ',', 'John', 'tagged', ' ', 'entity', '“', 'person_name', '”', '.', '1.2.4', 'Labeled', 'Content', 'Labeled', 'content', 'content', ',', ' ', 'classification', 'category', 'and/or', 'entities', ' ', 'known', 'serve', ' ', '“', 'training', 'content', '”', 'training', 'AI', ' ', 'models', '.']

 TOTAL FILTERED TOKENS ==> 35 


 --- NER --- 

John==> PERSON


1.2.4==> CARDINAL


Content Labeled==> PERSON


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, John, the entity “person_name, 1.2.4, Labeled Content, the content, whose  classification category, entities, “training content, the AI  models] 

 TOTAL NOUN CHUNKS --> 10
 ************************************************** 

sentence 28 -->  1 Natural Language Processing (NLP) External Document © 2019 Infosys Limited External Document 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 1
 LEMA ---> 1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Natural
 LEMA ---> Natural
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Language
 LEMA ---> Language
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  punct
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '1', 'Natural', 'Language', 'Processing', '(', 'NLP', ')', 'External', 'Document', '©', '2019', 'Infosys', 'Limited', 'External', 'Document']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

NLP==> ORG


Infosys Limited External Document==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ 1 Natural Language Processing, NLP, External Document] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 29 --> © 2019 Infosys Limited  2.1 Content Capture Capturing content in digital format is  one of the first steps in Content Services. 

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  quantmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.1
 LEMA ---> 2.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Capture
 LEMA ---> Capture
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Capturing
 LEMA ---> Capturing
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> digital
 LEMA ---> digital
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> format
 LEMA ---> format
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> one
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> first
 LEMA ---> first
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> steps
 LEMA ---> step
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', ' ', '2.1', 'Content', 'Capture', 'Capturing', 'content', 'digital', 'format', ' ', 'steps', 'Content', 'Services', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

Infosys Limited==> ORG


2.1 Content Capture Capturing==> MONEY


one==> CARDINAL


first==> ORDINAL


Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [© 2019 Infosys Limited  2.1 Content Capture Capturing content, digital format, the first steps, Content Services] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 30 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 31 --> Along with the content, information such  as customer name, zip code, type of the  document is also captured. 

 TOKEN ---> Along
 LEMA ---> along
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> customer
 LEMA ---> customer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> zip
 LEMA ---> zip
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> code
 LEMA ---> code
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> type
 LEMA ---> type
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> also
 LEMA ---> also
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> captured
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['content', ',', 'information', ' ', 'customer', ',', 'zip', 'code', ',', 'type', ' ', 'document', 'captured', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the content, customer name, zip code, type, the  document] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 32 --> Current capture  process is based on the location of the  information. 

 TOKEN ---> Current
 LEMA ---> current
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capture
 LEMA ---> capture
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> location
 LEMA ---> location
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Current', 'capture', ' ', 'process', 'based', 'location', ' ', 'information', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Current capture  process, the location, the  information] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 33 --> In this process, templates are   

 TOKEN ---> In
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> templates
 LEMA ---> template
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['process', ',', 'templates', ' ']

 TOTAL FILTERED TOKENS ==> 4 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [this process, templates] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 34 --> To implement the information extraction,  as a first step, AI model needs to be trained. 

 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implement
 LEMA ---> implement
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extraction
 LEMA ---> extraction
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> first
 LEMA ---> first
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> step
 LEMA ---> step
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> ai
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['implement', 'information', 'extraction', ',', ' ', 'step', ',', 'AI', 'model', 'needs', 'trained', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

first==> ORDINAL


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the information extraction, a first step, AI model] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 35 -->  NLP engines accepts annotated text files  as training data set. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engines
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accepts
 LEMA ---> accept
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotated
 LEMA ---> annotate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> files
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> training
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> data
 LEMA ---> datum
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> set
 LEMA ---> set
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'NLP', 'engines', 'accepts', 'annotated', 'text', 'files', ' ', 'training', 'data', 'set', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ NLP engines, annotated text files, training data] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 36 --> Once the information  in text document (or labeled content) is  annotated, it can be used to train NLP  engine. 

 TOKEN ---> Once
 LEMA ---> once
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> annotated
 LEMA ---> annotate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> train
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['information', ' ', 'text', 'document', '(', 'labeled', 'content', ')', ' ', 'annotated', ',', 'train', 'NLP', ' ', 'engine', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the information, text document, labeled content, it, NLP  engine] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 37 --> More the number of annotated  fed to capture tool and the tool is trained  to extract information from a particular  location, for that template. 

 TOKEN ---> More
 LEMA ---> More
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> number
 LEMA ---> number
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotated
 LEMA ---> annotate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> fed
 LEMA ---> feed
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capture
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tool
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tool
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extract
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> particular
 LEMA ---> particular
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> location
 LEMA ---> location
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> template
 LEMA ---> template
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['number', 'annotated', ' ', 'fed', 'capture', 'tool', 'tool', 'trained', ' ', 'extract', 'information', 'particular', ' ', 'location', ',', 'template', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [More the number, tool, the tool, information, a particular  location, that template] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 38 --> This location  based information extraction is no longer  productive due to huge variation in  content layouts. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> location
 LEMA ---> location
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extraction
 LEMA ---> extraction
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> no
 LEMA ---> no
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> longer
 LEMA ---> long
 POS TAG ---> ADV
 TAG  ---> RBR
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> productive
 LEMA ---> productive
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> due
 LEMA ---> due
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> huge
 LEMA ---> huge
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> variation
 LEMA ---> variation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> layouts
 LEMA ---> layout
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['location', ' ', 'based', 'information', 'extraction', 'longer', ' ', 'productive', 'huge', 'variation', ' ', 'content', 'layouts', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This location,  based information extraction, huge variation,  content layouts] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 39 --> This issue can be solved by context based  extraction. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> issue
 LEMA ---> issue
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> solved
 LEMA ---> solve
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> extraction
 LEMA ---> extraction
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['issue', 'solved', 'context', 'based', ' ', 'extraction', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This issue,  extraction] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 40 --> Using NLP, an AI model can  files, accommodating variations in the  interested information, more will be the  accuracy of the AI model. 

 TOKEN ---> Using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> files
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accommodating
 LEMA ---> accommodate
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> variations
 LEMA ---> variation
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> interested
 LEMA ---> interested
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> accuracy
 LEMA ---> accuracy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', ',', 'AI', 'model', ' ', 'files', ',', 'accommodating', 'variations', ' ', 'interested', 'information', ',', ' ', 'accuracy', 'AI', 'model', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

NLP==> ORG


AI==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, an AI model, variations, the  interested information, the  accuracy, the AI model] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 41 --> Once the AI model is trained, it can be used  to capture the information from new or  unseen documents. 

 TOKEN ---> Once
 LEMA ---> once
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capture
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> documents
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['AI', 'model', 'trained', ',', ' ', 'capture', 'information', 'new', ' ', 'unseen', 'documents', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the AI model, it, the information, new or  unseen documents] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 42 --> The new or unseen  be trained which can then be used for  extraction. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> extraction
 LEMA ---> extraction
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['new', 'unseen', ' ', 'trained', ' ', 'extraction', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ extraction] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 43 --> This process is also called as  Cognitive Capture. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> also
 LEMA ---> also
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> called
 LEMA ---> call
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Cognitive
 LEMA ---> Cognitive
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Capture
 LEMA ---> Capture
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['process', 'called', ' ', 'Cognitive', 'Capture', '.']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This process, Cognitive Capture] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 44 --> Extracted information  then can be directly tagged to the content  while saving into the Content Services or it  can be used for verification during straight  through processing, etc. 

 TOKEN ---> Extracted
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> directly
 LEMA ---> directly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> while
 LEMA ---> while
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> saving
 LEMA ---> save
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> verification
 LEMA ---> verification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> during
 LEMA ---> during
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> straight
 LEMA ---> straight
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Extracted', 'information', ' ', 'directly', 'tagged', 'content', ' ', 'saving', 'Content', 'Services', ' ', 'verification', 'straight', ' ', 'processing', ',', 'etc', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

the Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Extracted information, the content, the Content Services, it, verification, processing] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 45 --> documents may need to be OCRed if  required. 

 TOKEN ---> documents
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> may
 LEMA ---> may
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> OCRed
 LEMA ---> ocred
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> if
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> required
 LEMA ---> require
 POS TAG ---> VERB
 TAG  ---> VBD
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['documents', 'need', 'OCRed', ' ', 'required', '.']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [documents] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 46 --> Capture process implemented  using NLP will not depend on layout of  the content and still be able to capture  appropriate information even if there  is change in the layout, as long as the  information is in the same context. 

 TOKEN ---> Capture
 LEMA ---> capture
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implemented
 LEMA ---> implement
 POS TAG ---> VERB
 TAG  ---> VBD
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> depend
 LEMA ---> depend
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> layout
 LEMA ---> layout
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> still
 LEMA ---> still
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> able
 LEMA ---> able
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capture
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> appropriate
 LEMA ---> appropriate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> even
 LEMA ---> even
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> if
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> there
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> change
 LEMA ---> change
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> layout
 LEMA ---> layout
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> long
 LEMA ---> long
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> same
 LEMA ---> same
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Capture', 'process', 'implemented', ' ', 'NLP', 'depend', 'layout', ' ', 'content', 'able', 'capture', ' ', 'appropriate', 'information', ' ', 'change', 'layout', ',', 'long', ' ', 'information', 'context', '.']

 TOTAL FILTERED TOKENS ==> 23 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Capture process, NLP, layout, the content, appropriate information, change, the layout, the  information, the same context] 

 TOTAL NOUN CHUNKS --> 9
 ************************************************** 

sentence 47 --> 2 How NLP Can Make Content Services Smarter External Document © 2019 

 TOKEN ---> 2
 LEMA ---> 2
 POS TAG ---> X
 TAG  ---> LS
 DEPENDENCY  --->  meta
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> How
 LEMA ---> how
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Make
 LEMA ---> make
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Smarter
 LEMA ---> Smarter
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dative
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['2', 'NLP', 'Content', 'Services', 'Smarter', 'External', 'Document', '©', '2019']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

2==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, Content Services Smarter External Document, ©] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 48 --> Infosys Limited External Document 

 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Infosys', 'Limited', 'External', 'Document']

 TOTAL FILTERED TOKENS ==> 4 


 --- NER --- 

Infosys Limited External Document==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Infosys Limited External Document] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 49 --> © 2019 Infosys Limited  2.1.1   

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.1.1
 LEMA ---> 2.1.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', ' ', '2.1.1', ' ']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

Infosys Limited==> ORG


2.1.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [© 2019 Infosys Limited] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 50 --> Implementation Scenarios Below described are the some of the  different implementation scenarios in the  context of cognitive capture 2.1.1.1   

 TOKEN ---> Implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Scenarios
 LEMA ---> Scenarios
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Below
 LEMA ---> below
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> described
 LEMA ---> describe
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> some
 LEMA ---> some
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> cognitive
 LEMA ---> cognitive
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capture
 LEMA ---> capture
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2.1.1.1
 LEMA ---> 2.1.1.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Implementation', 'Scenarios', 'described', ' ', 'different', 'implementation', 'scenarios', ' ', 'context', 'cognitive', 'capture', '2.1.1.1', ' ']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

2.1.1.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Implementation Scenarios, the  different implementation scenarios, the  context, cognitive capture] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 51 --> Extracting metadata while  Capture Captured information can be tagged to the  content while saving into Content Services. 

 TOKEN ---> Extracting
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> while
 LEMA ---> while
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Capture
 LEMA ---> capture
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Captured
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> while
 LEMA ---> while
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> saving
 LEMA ---> save
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Extracting', 'metadata', ' ', 'Capture', 'Captured', 'information', 'tagged', ' ', 'content', 'saving', 'Content', 'Services', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [metadata,  Capture Captured information, the  content, Content Services] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 52 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 53 --> The tagged information will give identity  to the content, which helps in locating and  reusing the content. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> give
 LEMA ---> give
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identity
 LEMA ---> identity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  dative
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> helps
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> locating
 LEMA ---> locating
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> reusing
 LEMA ---> reuse
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['tagged', 'information', 'identity', ' ', 'content', ',', 'helps', 'locating', ' ', 'reusing', 'content', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The tagged information, the content, locating, the content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 54 -->  2.1.1.2  Data Verification for Straight  through Processing Data captured can be verified with master   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.1.1.2
 LEMA ---> 2.1.1.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Data
 LEMA ---> Data
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Verification
 LEMA ---> Verification
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Straight
 LEMA ---> Straight
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Processing
 LEMA ---> Processing
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Data
 LEMA ---> Data
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> captured
 LEMA ---> capture
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  csubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> verified
 LEMA ---> verify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> master
 LEMA ---> master
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '2.1.1.2', ' ', 'Data', 'Verification', 'Straight', ' ', 'Processing', 'Data', 'captured', 'verified', 'master', ' ']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

2.1.1.2==> CARDINAL


Processing Data==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [2.1.1.2  Data Verification, Processing Data, master] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 55 --> As a first step, the AI model is to be trained  with labeled documents to retrieve  metadata information from the document. 

 TOKEN ---> As
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> first
 LEMA ---> first
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> step
 LEMA ---> step
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> documents
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> retrieve
 LEMA ---> retrieve
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['step', ',', 'AI', 'model', 'trained', ' ', 'labeled', 'documents', 'retrieve', ' ', 'metadata', 'information', 'document', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

first==> ORDINAL


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [a first step, the AI model, labeled documents, metadata information, the document] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 56 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 57 --> Since it is context based metadata  identification, both models, NER as well as  Categorizer, can be used. 

 TOKEN ---> Since
 LEMA ---> since
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> identification
 LEMA ---> identification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> both
 LEMA ---> both
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> well
 LEMA ---> well
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Categorizer
 LEMA ---> Categorizer
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['context', 'based', 'metadata', ' ', 'identification', ',', 'models', ',', 'NER', ' ', 'Categorizer', ',', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

Categorizer==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [it, context based metadata  identification, both models, NER,  Categorizer] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 58 --> For training NER models, the process is  same, that is to annotate the documents  and then use the annotated documents for  training. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> same
 LEMA ---> same
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotate
 LEMA ---> annotate
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> documents
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> use
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotated
 LEMA ---> annotate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> documents
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> training
 LEMA ---> training
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['training', 'NER', 'models', ',', 'process', ' ', ',', 'annotate', 'documents', ' ', 'use', 'annotated', 'documents', ' ', 'training', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NER models, the process, the documents, the annotated documents,  training] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 59 -->  Categorizer model is supported by   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Categorizer
 LEMA ---> Categorizer
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> supported
 LEMA ---> support
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'Categorizer', 'model', 'supported', ' ']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

Categorizer==> PRODUCT


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ Categorizer model] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 60 --> some of the NLP tools such as Apache  OpenNLP. 

 TOKEN ---> some
 LEMA ---> some
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tools
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Apache
 LEMA ---> Apache
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> OpenNLP
 LEMA ---> opennlp
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'tools', 'Apache', ' ', 'OpenNLP', '.']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

NLP==> ORG


Apache==> PRODUCT


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the NLP tools, Apache  OpenNLP] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 61 --> To train a categorizer model,  first the categories need to be defined. 

 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> train
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> first
 LEMA ---> first
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categories
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> defined
 LEMA ---> define
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['train', 'categorizer', 'model', ',', ' ', 'categories', 'need', 'defined', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

first==> ORDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [a categorizer model, the categories] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 62 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 63 --> For example, to implement metadata  identification through classification,  a category needs to be mapped to a  metadata value. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implement
 LEMA ---> implement
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> identification
 LEMA ---> identification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classification
 LEMA ---> classification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mapped
 LEMA ---> map
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> value
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ',', 'implement', 'metadata', ' ', 'identification', 'classification', ',', ' ', 'category', 'needs', 'mapped', ' ', 'metadata', 'value', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, metadata  identification, classification, a category, a  metadata value] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 64 --> As next step, from labelled  data management system for automatic  processing, such as claim processing, etc. 2.2 Content Ingestion Content Ingestion is a process where  content is loaded into Content Services  platform, either through a batch process  or manually through a user interface. 

 TOKEN ---> As
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> next
 LEMA ---> next
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> step
 LEMA ---> step
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labelled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> data
 LEMA ---> datum
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> management
 LEMA ---> management
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> system
 LEMA ---> system
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> automatic
 LEMA ---> automatic
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> claim
 LEMA ---> claim
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2.2
 LEMA ---> 2.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Ingestion
 LEMA ---> Ingestion
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Ingestion
 LEMA ---> Ingestion
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> where
 LEMA ---> where
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> loaded
 LEMA ---> load
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> platform
 LEMA ---> platform
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> either
 LEMA ---> either
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> batch
 LEMA ---> batch
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> manually
 LEMA ---> manually
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> user
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> interface
 LEMA ---> interface
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['step', ',', 'labelled', ' ', 'data', 'management', 'system', 'automatic', ' ', 'processing', ',', 'claim', 'processing', ',', 'etc', '.', '2.2', 'Content', 'Ingestion', 'Content', 'Ingestion', 'process', ' ', 'content', 'loaded', 'Content', 'Services', ' ', 'platform', ',', 'batch', 'process', ' ', 'manually', 'user', 'interface', '.']

 TOTAL FILTERED TOKENS ==> 37 


 --- NER --- 

2.2==> CARDINAL


Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [next step, labelled  data management system, automatic  processing, claim processing, 2.2 Content Ingestion Content Ingestion, a process,  content, Content Services,  platform, a batch process, a user interface] 

 TOTAL NOUN CHUNKS --> 11
 ************************************************** 

sentence 65 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 66 --> Biggest challenge here is identifying the  metadata to tag with. 

 TOKEN ---> Biggest
 LEMA ---> big
 POS TAG ---> ADJ
 TAG  ---> JJS
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenge
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> here
 LEMA ---> here
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identifying
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tag
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Biggest', 'challenge', 'identifying', ' ', 'metadata', 'tag', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

Biggest==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Biggest challenge, the  metadata] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 67 --> For batch process  metadata needs to be made available to  the ingestion process, through an XML,  CVS, database, etc. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> batch
 LEMA ---> batch
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> made
 LEMA ---> make
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> available
 LEMA ---> available
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  oprd
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  oprd
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> XML
 LEMA ---> xml
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> CVS
 LEMA ---> CVS
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> database
 LEMA ---> database
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['batch', 'process', ' ', 'metadata', 'needs', 'available', ' ', 'ingestion', 'process', ',', 'XML', ',', ' ', 'CVS', ',', 'database', ',', 'etc', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

CVS==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [batch process,  metadata, the ingestion process, an XML,  CVS, database] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 68 --> For manual ingestion or  upload, user needs to think what metadata  the file should have, and then accordingly  enter the metadata on user interface. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> manual
 LEMA ---> manual
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> upload
 LEMA ---> upload
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> user
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> think
 LEMA ---> think
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> what
 LEMA ---> what
 POS TAG ---> PRON
 TAG  ---> WP
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> should
 LEMA ---> should
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> have
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accordingly
 LEMA ---> accordingly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> enter
 LEMA ---> enter
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> user
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> interface
 LEMA ---> interface
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['manual', 'ingestion', ' ', 'upload', ',', 'user', 'needs', 'think', 'metadata', ' ', 'file', ',', 'accordingly', ' ', 'enter', 'metadata', 'user', 'interface', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [manual ingestion, upload, user, what metadata, the file, the metadata, user interface] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 69 --> It  content, important business terms/phrases,  which helps in classifying the content to  the category, need to be listed against that  category. 

 TOKEN ---> It
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> important
 LEMA ---> important
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> /
 LEMA ---> /
 POS TAG ---> SYM
 TAG  ---> SYM
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> helps
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classifying
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> listed
 LEMA ---> list
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> against
 LEMA ---> against
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'content', ',', 'important', 'business', 'terms', '/', 'phrases', ',', ' ', 'helps', 'classifying', 'content', ' ', 'category', ',', 'need', 'listed', ' ', 'category', '.']

 TOTAL FILTERED TOKENS ==> 21 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [It, content, important business terms, phrases, the content, the category, that  category] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 70 --> This list of category mapped to  business terms can be fed to NLP engine,  which then build a categorizer model. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> list
 LEMA ---> list
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mapped
 LEMA ---> map
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> fed
 LEMA ---> feed
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> nlp
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> build
 LEMA ---> build
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['list', 'category', 'mapped', ' ', 'business', 'terms', 'fed', 'NLP', 'engine', ',', ' ', 'build', 'categorizer', 'model', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This list, category, business terms, NLP engine, a categorizer model] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 71 -->  Based on the occurrences of the business  terms/phrases in the new or unseen  content, it can be classified into a category  (which is being mapped to a metadata  value). 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> occurrences
 LEMA ---> occurrence
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> /
 LEMA ---> /
 POS TAG ---> SYM
 TAG  ---> SYM
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classified
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> being
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBG
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mapped
 LEMA ---> map
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> value
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'Based', 'occurrences', 'business', ' ', 'terms', '/', 'phrases', 'new', 'unseen', ' ', 'content', ',', 'classified', 'category', ' ', '(', 'mapped', 'metadata', ' ', 'value', ')', '.']

 TOTAL FILTERED TOKENS ==> 23 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the occurrences, the business  terms/phrases, the new or unseen  content, it, a category, a metadata  value] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 72 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 73 --> New or unseen content is subjected to  either NER or Categorizer or both the  models. 

 TOKEN ---> New
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> subjected
 LEMA ---> subject
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> either
 LEMA ---> either
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Categorizer
 LEMA ---> Categorizer
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> both
 LEMA ---> both
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['New', 'unseen', 'content', 'subjected', ' ', 'NER', 'Categorizer', ' ', 'models', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

Categorizer==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [New or unseen content] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 74 --> Use of both models will need more  time to train, will give higher accuracy and  of course, less throughput. 

 TOKEN ---> Use
 LEMA ---> use
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> both
 LEMA ---> both
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> train
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> give
 LEMA ---> give
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> higher
 LEMA ---> high
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accuracy
 LEMA ---> accuracy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> course
 LEMA ---> course
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> less
 LEMA ---> less
 POS TAG ---> ADV
 TAG  ---> RBR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> throughput
 LEMA ---> throughput
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Use', 'models', 'need', ' ', 'time', 'train', ',', 'higher', 'accuracy', ' ', 'course', ',', 'throughput', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Use, both models, more  time, higher accuracy, course, less throughput] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 75 --> With appropriate plug-ins, text from audio  and video files can be generated and  takes significant amount of time to finalize  what metadata the content should have. 

 TOKEN ---> With
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> appropriate
 LEMA ---> appropriate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> plug
 LEMA ---> plug
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> PUNCT
 TAG  ---> HYPH
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ins
 LEMA ---> in
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> audio
 LEMA ---> audio
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> video
 LEMA ---> video
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> files
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> generated
 LEMA ---> generate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> takes
 LEMA ---> take
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> significant
 LEMA ---> significant
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> amount
 LEMA ---> amount
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> finalize
 LEMA ---> finalize
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> what
 LEMA ---> what
 POS TAG ---> PRON
 TAG  ---> WP
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> should
 LEMA ---> should
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> have
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['appropriate', 'plug', '-', 'ins', ',', 'text', 'audio', ' ', 'video', 'files', 'generated', ' ', 'takes', 'significant', 'time', 'finalize', ' ', 'metadata', 'content', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [appropriate plug-ins, text, video files, significant amount, time, what metadata, the content] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 76 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 77 --> This manual process is also prone to  mistakes. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> manual
 LEMA ---> manual
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> also
 LEMA ---> also
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> prone
 LEMA ---> prone
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> mistakes
 LEMA ---> mistake
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['manual', 'process', 'prone', ' ', 'mistakes', '.']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This manual process,  mistakes] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 78 --> NLP can help here by cognitively tagging  the metadata to the content during  ingestion. 

 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> help
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> here
 LEMA ---> here
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> cognitively
 LEMA ---> cognitively
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagging
 LEMA ---> tagging
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> during
 LEMA ---> during
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'help', 'cognitively', 'tagging', ' ', 'metadata', 'content', ' ', 'ingestion', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, the metadata, the content,  ingestion] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 79 --> NLP engine can be trained  to identify the metadata to be tagged,  based on the context of the content. 

 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'engine', 'trained', ' ', 'identify', 'metadata', 'tagged', ',', ' ', 'based', 'context', 'content', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP engine, the metadata, the context, the content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 80 --> The  identified metadata can be tagged with  the content during ingestion. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> during
 LEMA ---> during
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'identified', 'metadata', 'tagged', ' ', 'content', 'ingestion', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The  identified metadata, the content, ingestion] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 81 --> This can be  illustrated by following diagram: subjected to the AI models for metadata  identification and then ingested into the  Content Services Platform. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> illustrated
 LEMA ---> illustrate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> following
 LEMA ---> follow
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> diagram
 LEMA ---> diagram
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> :
 LEMA ---> :
 POS TAG ---> PUNCT
 TAG  ---> :
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> subjected
 LEMA ---> subject
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> identification
 LEMA ---> identification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingested
 LEMA ---> ingest
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'illustrated', 'following', 'diagram', ':', 'subjected', 'AI', 'models', 'metadata', ' ', 'identification', 'ingested', ' ', 'Content', 'Services', 'Platform', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [diagram, the AI models, metadata  identification, the  Content Services Platform] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 82 -->  2.2.1 Implementations scenarios Described below are the different  implementation scenarios in the context of  cognitive content ingestion. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.2.1
 LEMA ---> 2.2.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Implementations
 LEMA ---> Implementations
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Described
 LEMA ---> describe
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> below
 LEMA ---> below
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> cognitive
 LEMA ---> cognitive
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '2.2.1', 'Implementations', 'scenarios', 'Described', 'different', ' ', 'implementation', 'scenarios', 'context', ' ', 'cognitive', 'content', 'ingestion', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

2.2.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ 2.2.1 Implementations scenarios, the different  implementation scenarios, the context,  cognitive content ingestion] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 83 --> 2.2.1.1 

 TOKEN ---> 2.2.1.1
 LEMA ---> 2.2.1.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['2.2.1.1']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

2.2.1.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 84 --> During Batch Ingestion In any batch ingestion process, appropriate  metadata values are needed to complete  the process. 

 TOKEN ---> During
 LEMA ---> during
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Batch
 LEMA ---> Batch
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Ingestion
 LEMA ---> Ingestion
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> In
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> batch
 LEMA ---> batch
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> appropriate
 LEMA ---> appropriate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needed
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> complete
 LEMA ---> complete
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Batch', 'Ingestion', 'batch', 'ingestion', 'process', ',', 'appropriate', ' ', 'metadata', 'values', 'needed', 'complete', ' ', 'process', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Batch Ingestion, any batch ingestion process, appropriate  metadata values, the process] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 85 --> One of the major challenges is  the non-availability of the metadata values,  which are being expected by Content  Service Platform. 

 TOKEN ---> One
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> major
 LEMA ---> major
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> non
 LEMA ---> non
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> availability
 LEMA ---> availability
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> being
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBG
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> expected
 LEMA ---> expect
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Service
 LEMA ---> Service
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['major', 'challenges', ' ', 'non', '-', 'availability', 'metadata', 'values', ',', ' ', 'expected', 'Content', ' ', 'Service', 'Platform', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

One==> CARDINAL


Content  Service Platform==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the major challenges, the non, -, availability, the metadata values, Content  Service Platform] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 86 --> NLP can help in bridging  the expectation, by extracting context  based values. 

 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> help
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> bridging
 LEMA ---> bridging
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> expectation
 LEMA ---> expectation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extracting
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'help', 'bridging', ' ', 'expectation', ',', 'extracting', 'context', ' ', 'based', 'values', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, bridging, the expectation, context  based values] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 87 --> AI models can be trained  which can identify the metadata values as  External Document 

 TOKEN ---> AI
 LEMA ---> ai
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['AI', 'models', 'trained', ' ', 'identify', 'metadata', 'values', ' ', 'External', 'Document']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [AI models, the metadata values, External Document] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 88 --> © 2019 Infosys Limited External Document © 2019 Infosys Limited  a part of ingestion process and then load  the content with appropriate metadata  values. 

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> part
 LEMA ---> part
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> load
 LEMA ---> load
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> appropriate
 LEMA ---> appropriate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  prep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', 'External', 'Document', '©', '2019', 'Infosys', 'Limited', ' ', 'ingestion', 'process', 'load', ' ', 'content', 'appropriate', 'metadata', ' ', 'values', '.']

 TOTAL FILTERED TOKENS ==> 21 


 --- NER --- 

Infosys Limited External Document==> ORG


Infosys Limited==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [© 2019 Infosys Limited External Document © 2019 Infosys Limited, ingestion process, the content, appropriate metadata  values] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 89 --> With NLP tool, as a part of ingestion  pipeline, content from sources where the  metadata values are not available, can be  ingested into Content Services Platform. 

 TOKEN ---> With
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tool
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> part
 LEMA ---> part
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ingestion
 LEMA ---> ingestion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> pipeline
 LEMA ---> pipeline
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sources
 LEMA ---> source
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> where
 LEMA ---> where
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> available
 LEMA ---> available
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> ingested
 LEMA ---> ingest
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'tool', ',', 'ingestion', ' ', 'pipeline', ',', 'content', 'sources', ' ', 'metadata', 'values', 'available', ',', ' ', 'ingested', 'Content', 'Services', 'Platform', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

NLP==> ORG


Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP tool, a part, ingestion  pipeline, content, sources, the  metadata values, Content Services Platform] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 90 --> 2.2.1.2 Manual content upload When users upload content manually into  Content Services Platform, using a user  interface, they have to enter metadata  values. 

 TOKEN ---> 2.2.1.2
 LEMA ---> 2.2.1.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Manual
 LEMA ---> manual
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> upload
 LEMA ---> upload
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> When
 LEMA ---> when
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> upload
 LEMA ---> upload
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> manually
 LEMA ---> manually
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> user
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  det
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> interface
 LEMA ---> interface
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> they
 LEMA ---> they
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> have
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> enter
 LEMA ---> enter
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['2.2.1.2', 'Manual', 'content', 'upload', 'users', 'upload', 'content', 'manually', ' ', 'Content', 'Services', 'Platform', ',', 'user', ' ', 'interface', ',', 'enter', 'metadata', ' ', 'values', '.']

 TOTAL FILTERED TOKENS ==> 22 


 --- NER --- 

2.2.1.2==> CARDINAL


Manual==> GPE


Content Services Platform==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [2.2.1.2 Manual content upload, users, content, Content Services Platform, a user,  interface, they, metadata  values] 

 TOTAL NOUN CHUNKS --> 8
 ************************************************** 

sentence 91 --> In order to do this, users have to  read through the document, listen or  view the content and then decide what  metadata values this content can have. 

 TOKEN ---> In
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> order
 LEMA ---> order
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> do
 LEMA ---> do
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> have
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> read
 LEMA ---> read
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> listen
 LEMA ---> listen
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> view
 LEMA ---> view
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> decide
 LEMA ---> decide
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> what
 LEMA ---> what
 POS TAG ---> PRON
 TAG  ---> WP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> have
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['order', ',', 'users', ' ', 'read', 'document', ',', 'listen', ' ', 'view', 'content', 'decide', ' ', 'metadata', 'values', 'content', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [order, users, the document, the content, what,  metadata, this content] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 92 -->  From users’ perspective, this process is very  time consuming and prone to errors. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> From
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  poss
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ’
 LEMA ---> ’
 POS TAG ---> PART
 TAG  ---> POS
 DEPENDENCY  --->  case
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> perspective
 LEMA ---> perspective
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> very
 LEMA ---> very
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> consuming
 LEMA ---> consume
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> prone
 LEMA ---> prone
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> errors
 LEMA ---> error
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'users', '’', 'perspective', ',', 'process', ' ', 'time', 'consuming', 'prone', 'errors', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [users’ perspective, this process, errors] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 93 -->   NLP can solve this challenge. 

 TOKEN --->   
 LEMA --->   
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> nlp
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> solve
 LEMA ---> solve
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenge
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['  ', 'NLP', 'solve', 'challenge', '.']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [  NLP, this challenge] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 94 --> A trained NER  or Categorizer model can identify what  metadata values the content can have. 

 TOKEN ---> A
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Categorizer
 LEMA ---> Categorizer
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> what
 LEMA ---> what
 POS TAG ---> PRON
 TAG  ---> WP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> have
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['trained', 'NER', ' ', 'Categorizer', 'model', 'identify', ' ', 'metadata', 'values', 'content', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

Categorizer==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Categorizer model, what,  metadata, the content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 95 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 96 --> Users are first asked to upload content  which can be analyzed by the AI model  and the suggested metadata that can be  prefilled on user interface. 

 TOKEN ---> Users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> first
 LEMA ---> first
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> asked
 LEMA ---> ask
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> upload
 LEMA ---> upload
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> analyzed
 LEMA ---> analyze
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> suggested
 LEMA ---> suggested
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> prefilled
 LEMA ---> prefille
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> user
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> interface
 LEMA ---> interface
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Users', 'asked', 'upload', 'content', ' ', 'analyzed', 'AI', 'model', ' ', 'suggested', 'metadata', ' ', 'prefilled', 'user', 'interface', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

first==> ORDINAL


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Users, content, the AI model, the suggested metadata, user interface] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 97 --> Users need to  just verify it and submit it. 

 TOKEN ---> Users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> just
 LEMA ---> just
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> verify
 LEMA ---> verify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> submit
 LEMA ---> submit
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Users', 'need', ' ', 'verify', 'submit', '.']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Users, it, it] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 98 --> This saves time  for the user. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> saves
 LEMA ---> save
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> user
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['saves', 'time', ' ', 'user', '.']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [time, the user] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 99 -->  2.2.1.3 Shared Drive Migration 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.2.1.3
 LEMA ---> 2.2.1.3
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Shared
 LEMA ---> Shared
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Drive
 LEMA ---> Drive
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Migration
 LEMA ---> Migration
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '2.2.1.3', 'Shared', 'Drive', 'Migration']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Shared Drive Migration] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 100 --> Most of the organization store content  on shared network drives. 

 TOKEN ---> Most
 LEMA ---> Most
 POS TAG ---> ADJ
 TAG  ---> JJS
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> organization
 LEMA ---> organization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> store
 LEMA ---> store
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> shared
 LEMA ---> share
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> network
 LEMA ---> network
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> drives
 LEMA ---> drive
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['organization', 'store', 'content', ' ', 'shared', 'network', 'drives', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the organization store content, shared network drives] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 101 --> Content, which  is stored on shared drive are not tagged  with any metadata or organized in any  directory structure. 

 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> stored
 LEMA ---> store
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> shared
 LEMA ---> share
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> drive
 LEMA ---> drive
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> organized
 LEMA ---> organize
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> directory
 LEMA ---> directory
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> structure
 LEMA ---> structure
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Content', ',', ' ', 'stored', 'shared', 'drive', 'tagged', ' ', 'metadata', 'organized', ' ', 'directory', 'structure', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Content, shared drive, any metadata, any  directory structure] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 102 --> Due to this, the content  cannot be located and reused. 

 TOKEN ---> Due
 LEMA ---> due
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> located
 LEMA ---> locate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reused
 LEMA ---> reuse
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [',', 'content', ' ', 'located', 'reused', '.']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the content] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 103 --> More than  that, content laying on shared drive can  be a risk on adherence to compliance and  regulatory standards. 

 TOKEN ---> More
 LEMA ---> More
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> than
 LEMA ---> than
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> laying
 LEMA ---> lay
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> shared
 LEMA ---> share
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> drive
 LEMA ---> drive
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> risk
 LEMA ---> risk
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> adherence
 LEMA ---> adherence
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> compliance
 LEMA ---> compliance
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> regulatory
 LEMA ---> regulatory
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> standards
 LEMA ---> standard
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', ',', 'content', 'laying', 'shared', 'drive', ' ', 'risk', 'adherence', 'compliance', ' ', 'regulatory', 'standards', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [content, shared drive, a risk, adherence, compliance, regulatory standards] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 104 --> To overcome these  challenges and to manage the content  efficiently, it needs to be migrated to a  Content Service platform. 

 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> overcome
 LEMA ---> overcome
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> manage
 LEMA ---> manage
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> efficiently
 LEMA ---> efficiently
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> migrated
 LEMA ---> migrate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Service
 LEMA ---> Service
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> platform
 LEMA ---> platform
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['overcome', ' ', 'challenges', 'manage', 'content', ' ', 'efficiently', ',', 'needs', 'migrated', ' ', 'Content', 'Service', 'platform', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

Content Service==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [these  challenges, the content, it, a  Content Service platform] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 105 --> To migrate the content of shared drives, a  trained NER or Categorizer model can be  plugged-in into the migration framework. 

 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> migrate
 LEMA ---> migrate
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> shared
 LEMA ---> share
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> drives
 LEMA ---> drive
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Categorizer
 LEMA ---> Categorizer
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> plugged
 LEMA ---> plug
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> PUNCT
 TAG  ---> HYPH
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> RP
 DEPENDENCY  --->  prt
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> migration
 LEMA ---> migration
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> framework
 LEMA ---> framework
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['migrate', 'content', 'shared', 'drives', ',', ' ', 'trained', 'NER', 'Categorizer', 'model', ' ', 'plugged', '-', 'migration', 'framework', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

Categorizer==> PRODUCT


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the content, shared drives, a  trained NER or Categorizer model, the migration framework] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 106 -->  NLP model can identify the metadata  of content and it can be tagged to the  content while loading the content into the  content service platform. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> while
 LEMA ---> while
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> loading
 LEMA ---> load
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> service
 LEMA ---> service
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> platform
 LEMA ---> platform
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'NLP', 'model', 'identify', 'metadata', ' ', 'content', 'tagged', ' ', 'content', 'loading', 'content', ' ', 'content', 'service', 'platform', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ NLP model, the metadata, content, it, the  content, the content, the  content service platform] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 107 -->  2.3 Content Management Unstructured content stored on Content  Services Platform needs to be managed  effectively and efficiently, in order to locate  and reuse the content, to enable the use  of the content in business processes, etc.   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.3
 LEMA ---> 2.3
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Management
 LEMA ---> Management
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Unstructured
 LEMA ---> Unstructured
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> stored
 LEMA ---> store
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> managed
 LEMA ---> manage
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> effectively
 LEMA ---> effectively
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> efficiently
 LEMA ---> efficiently
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> order
 LEMA ---> order
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> locate
 LEMA ---> locate
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reuse
 LEMA ---> reuse
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> enable
 LEMA ---> enable
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> use
 LEMA ---> use
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processes
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '2.3', 'Content', 'Management', 'Unstructured', 'content', 'stored', 'Content', ' ', 'Services', 'Platform', 'needs', 'managed', ' ', 'effectively', 'efficiently', ',', 'order', 'locate', ' ', 'reuse', 'content', ',', 'enable', 'use', ' ', 'content', 'business', 'processes', ',', 'etc', '.', ' ']

 TOTAL FILTERED TOKENS ==> 33 


 --- NER --- 

2.3==> CARDINAL


Content Management Unstructured==> ORG


Content  Services==> ORG


Platform==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [ 2.3 Content Management Unstructured content, Content  Services Platform, order, the content, the use, the content, business processes] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 108 --> This can be achieved by maintaining the  proper identity of content. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> achieved
 LEMA ---> achieve
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> maintaining
 LEMA ---> maintain
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> proper
 LEMA ---> proper
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identity
 LEMA ---> identity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['achieved', 'maintaining', ' ', 'proper', 'identity', 'content', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the  proper identity, content] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 109 --> In Content  Services Platform, identity of a document  is determined by the metadata values the  content is tagged with.   

 TOKEN ---> In
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identity
 LEMA ---> identity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> determined
 LEMA ---> determine
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Content', ' ', 'Services', 'Platform', ',', 'identity', 'document', ' ', 'determined', 'metadata', 'values', ' ', 'content', 'tagged', '.', ' ']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Content  Services Platform, identity, a document, the metadata, the  content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 110 --> Due to various compliance regulation, such  as GDPR, identifying Personally Identifiable   

 TOKEN ---> Due
 LEMA ---> due
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> various
 LEMA ---> various
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> compliance
 LEMA ---> compliance
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> regulation
 LEMA ---> regulation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> GDPR
 LEMA ---> GDPR
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identifying
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Personally
 LEMA ---> personally
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Identifiable
 LEMA ---> identifiable
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['compliance', 'regulation', ',', ' ', 'GDPR', ',', 'identifying', 'Personally', 'Identifiable', ' ']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

Personally Identifiable==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [various compliance regulation, GDPR] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 111 --> (PI) Information from the content is  becoming a mandatory business function. 

 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> becoming
 LEMA ---> become
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mandatory
 LEMA ---> mandatory
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> function
 LEMA ---> function
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['(', 'PI', ')', 'Information', 'content', ' ', 'mandatory', 'business', 'function', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [(PI) Information, the content, a mandatory business function] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 112 -->  NLP based trained AI models can, identify  PI information from the content. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> ai
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'NLP', 'based', 'trained', 'AI', 'models', ',', 'identify', ' ', 'PI', 'information', 'content', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

NLP==> ORG


AI==> ORG


PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, trained AI models, PI information, the content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 113 -->  Going through huge content to  understand the context the content is a  daunting task. 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Going
 LEMA ---> go
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> huge
 LEMA ---> huge
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> understand
 LEMA ---> understand
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> daunting
 LEMA ---> daunt
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> task
 LEMA ---> task
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'Going', 'huge', 'content', ' ', 'understand', 'context', 'content', ' ', 'daunting', 'task', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [huge content, the context, the content, a  daunting task] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 114 --> It would be great for users, if  a summary of the content is available. 

 TOKEN ---> It
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> would
 LEMA ---> would
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> great
 LEMA ---> great
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> if
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> summary
 LEMA ---> summary
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> available
 LEMA ---> available
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['great', 'users', ',', ' ', 'summary', 'content', 'available', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [It, users, a summary, the content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 115 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 116 --> Following diagram illustrate three  implementations which shows how NLP  can add value while managing content. 

 TOKEN ---> Following
 LEMA ---> follow
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> diagram
 LEMA ---> diagram
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> illustrate
 LEMA ---> illustrate
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> three
 LEMA ---> three
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> implementations
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> shows
 LEMA ---> show
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> how
 LEMA ---> how
 POS TAG ---> ADV
 TAG  ---> WRB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> add
 LEMA ---> add
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> value
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> while
 LEMA ---> while
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> managing
 LEMA ---> manage
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Following', 'diagram', 'illustrate', ' ', 'implementations', 'shows', 'NLP', ' ', 'add', 'value', 'managing', 'content', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

three==> CARDINAL


NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [diagram, three  implementations, NLP, value, content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 117 --> External Document © 2019 Infosys Limited External Document 

 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['External', 'Document', '©', '2019', 'Infosys', 'Limited', 'External', 'Document']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

Infosys Limited External Document==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [External Document © 2019 Infosys Limited External Document] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 118 --> © 2019 Infosys Limited  2.3.1 Implementation scenarios Described below are implementation  scenarios in the context of cognitive  content management. 

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> limit
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.3.1
 LEMA ---> 2.3.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Described
 LEMA ---> describe
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> below
 LEMA ---> below
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> cognitive
 LEMA ---> cognitive
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> management
 LEMA ---> management
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', ' ', '2.3.1', 'Implementation', 'scenarios', 'Described', 'implementation', ' ', 'scenarios', 'context', 'cognitive', ' ', 'content', 'management', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

Infosys Limited==> ORG


2.3.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [© 2019 Infosys Limited  2.3.1 Implementation scenarios, implementation  scenarios, the context, cognitive  content management] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 119 -->  2.3.1.1 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.3.1.1
 LEMA ---> 2.3.1.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '2.3.1.1']

 TOTAL FILTERED TOKENS ==> 2 


 --- NER --- 

2.3.1.1==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 120 --> Maintaining Metadata Quality   

 TOKEN ---> Maintaining
 LEMA ---> Maintaining
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Metadata
 LEMA ---> Metadata
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Quality
 LEMA ---> Quality
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Maintaining', 'Metadata', 'Quality', ' ']

 TOTAL FILTERED TOKENS ==> 4 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Maintaining, Metadata Quality] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 121 --> In Content Service Platform, metadata  values represent the identity of the content  and using the metadata values, the content  will be located, accessed and reused. 

 TOKEN ---> In
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Service
 LEMA ---> Service
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> represent
 LEMA ---> represent
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identity
 LEMA ---> identity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> located
 LEMA ---> locate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accessed
 LEMA ---> access
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reused
 LEMA ---> reuse
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Content', 'Service', 'Platform', ',', 'metadata', ' ', 'values', 'represent', 'identity', 'content', ' ', 'metadata', 'values', ',', 'content', ' ', 'located', ',', 'accessed', 'reused', '.']

 TOTAL FILTERED TOKENS ==> 21 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Content Service Platform, metadata  values, the identity, the content, the metadata values, the content] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 122 --> If a  content is tagged with inaccurate values  or some values are missing, then either  inaccurate content will be referred and  reused, or correct content will not be  located. 

 TOKEN ---> If
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> inaccurate
 LEMA ---> inaccurate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> some
 LEMA ---> some
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> missing
 LEMA ---> miss
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> either
 LEMA ---> either
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> inaccurate
 LEMA ---> inaccurate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> referred
 LEMA ---> refer
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> reused
 LEMA ---> reuse
 POS TAG ---> VERB
 TAG  ---> VBD
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> correct
 LEMA ---> correct
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> located
 LEMA ---> locate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'content', 'tagged', 'inaccurate', 'values', ' ', 'values', 'missing', ',', ' ', 'inaccurate', 'content', 'referred', ' ', 'reused', ',', 'correct', 'content', ' ', 'located', '.']

 TOTAL FILTERED TOKENS ==> 21 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [a  content, inaccurate values, some values, either  inaccurate content, correct content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 123 --> Hence maintaining the quality  of metadata (or identity) of content is  extremely important. 

 TOKEN ---> Hence
 LEMA ---> hence
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> maintaining
 LEMA ---> maintain
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> quality
 LEMA ---> quality
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identity
 LEMA ---> identity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> extremely
 LEMA ---> extremely
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> important
 LEMA ---> important
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['maintaining', 'quality', ' ', 'metadata', '(', 'identity', ')', 'content', ' ', 'extremely', 'important', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the quality, metadata, identity, content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 124 --> NLP based trained AI models can help  us in this. 

 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> ai
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> help
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> us
 LEMA ---> we
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'based', 'trained', 'AI', 'models', 'help', ' ', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

NLP==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, trained AI models, us] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 125 --> It cannot only make sure that  the content is tagged with corrected  metadata, but also tag the content with  new metadata values or missing values. 

 TOKEN ---> It
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> only
 LEMA ---> only
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> make
 LEMA ---> make
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sure
 LEMA ---> sure
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> corrected
 LEMA ---> correct
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> but
 LEMA ---> but
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> also
 LEMA ---> also
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tag
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> missing
 LEMA ---> miss
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['sure', ' ', 'content', 'tagged', 'corrected', ' ', 'metadata', ',', 'tag', 'content', ' ', 'new', 'metadata', 'values', 'missing', 'values', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [It, the content, corrected  metadata, the content, new metadata values, missing values] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 126 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 127 --> Implementation steps, for maintaining  the metadata quality, is similar to that  of metadata identification but the  post processing is different. 

 TOKEN ---> Implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> steps
 LEMA ---> step
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> maintaining
 LEMA ---> maintain
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> quality
 LEMA ---> quality
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> similar
 LEMA ---> similar
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identification
 LEMA ---> identification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> but
 LEMA ---> but
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> post
 LEMA ---> post
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Implementation', 'steps', ',', 'maintaining', ' ', 'metadata', 'quality', ',', 'similar', ' ', 'metadata', 'identification', ' ', 'post', 'processing', 'different', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Implementation steps, the metadata quality, metadata identification, the  post processing] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 128 --> Process of  maintaining metadata quality can run in  background, as batch process and make  sure the metadata values are accurate. 

 TOKEN ---> Process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> maintaining
 LEMA ---> maintain
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> quality
 LEMA ---> quality
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> run
 LEMA ---> run
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> background
 LEMA ---> background
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> batch
 LEMA ---> batch
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> make
 LEMA ---> make
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> sure
 LEMA ---> sure
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> values
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accurate
 LEMA ---> accurate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Process', ' ', 'maintaining', 'metadata', 'quality', 'run', ' ', 'background', ',', 'batch', 'process', ' ', 'sure', 'metadata', 'values', 'accurate', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Process, metadata quality,  background, batch process, the metadata values] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 129 --> 2.3.1.2 Intelligent Summarization Content stored in Content Services  Platform can be large. 

 TOKEN ---> 2.3.1.2
 LEMA ---> 2.3.1.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Intelligent
 LEMA ---> Intelligent
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Summarization
 LEMA ---> Summarization
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> stored
 LEMA ---> store
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> large
 LEMA ---> large
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['2.3.1.2', 'Intelligent', 'Summarization', 'Content', 'stored', 'Content', 'Services', ' ', 'Platform', 'large', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [2.3.1.2 Intelligent Summarization Content, Content Services,  Platform] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 130 --> It will be time  consuming for users to go through the  entire content and understand the content  completely. 

 TOKEN ---> It
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> consuming
 LEMA ---> consume
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> go
 LEMA ---> go
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> entire
 LEMA ---> entire
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> understand
 LEMA ---> understand
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> completely
 LEMA ---> completely
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['time', ' ', 'consuming', 'users', ' ', 'entire', 'content', 'understand', 'content', ' ', 'completely', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [It, time, users, the  entire content, the content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 131 --> Legal contracts, agreements  etc. falls in these category of content. 

 TOKEN ---> Legal
 LEMA ---> legal
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> contracts
 LEMA ---> contract
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> agreements
 LEMA ---> agreement
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> falls
 LEMA ---> fall
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Legal', 'contracts', ',', 'agreements', ' ', 'etc', '.', 'falls', 'category', 'content', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Legal contracts, agreements, these category, content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 132 -->    

 TOKEN --->   
 LEMA --->   
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['  ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 133 --> The challenge of large content can be  addressed by NLP. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenge
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> large
 LEMA ---> large
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> addressed
 LEMA ---> address
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['challenge', 'large', 'content', ' ', 'addressed', 'NLP', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The challenge, large content, NLP] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 134 --> Using NLP, an AI model  can be trained which identifies important  business terms in the content and then  create the summary of the content using  the sentences or paragraph around these  important business terms. 

 TOKEN ---> Using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identifies
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> important
 LEMA ---> important
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> create
 LEMA ---> create
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> summary
 LEMA ---> summary
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sentences
 LEMA ---> sentence
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> paragraph
 LEMA ---> paragraph
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> around
 LEMA ---> around
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> important
 LEMA ---> important
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', ',', 'AI', 'model', ' ', 'trained', 'identifies', 'important', ' ', 'business', 'terms', 'content', ' ', 'create', 'summary', 'content', ' ', 'sentences', 'paragraph', ' ', 'important', 'business', 'terms', '.']

 TOTAL FILTERED TOKENS ==> 24 


 --- NER --- 

NLP==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, an AI model, important  business terms, the content, the summary, the content, the sentences, these  important business terms] 

 TOTAL NOUN CHUNKS --> 8
 ************************************************** 

sentence 135 --> The summarized  document will be the new document  and can be linked to the original content. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> summarized
 LEMA ---> summarize
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> linked
 LEMA ---> link
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> original
 LEMA ---> original
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['summarized', ' ', 'document', 'new', 'document', ' ', 'linked', 'original', 'content', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The summarized  document, the new document, the original content] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 136 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 137 --> Once summary is created, users can just  go through the summary document  to understand the complete content,  thereby saving lot of time. 

 TOKEN ---> Once
 LEMA ---> once
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> summary
 LEMA ---> summary
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> created
 LEMA ---> create
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> just
 LEMA ---> just
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> go
 LEMA ---> go
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> through
 LEMA ---> through
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> summary
 LEMA ---> summary
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> understand
 LEMA ---> understand
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> complete
 LEMA ---> complete
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> thereby
 LEMA ---> thereby
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> saving
 LEMA ---> save
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> lot
 LEMA ---> lot
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['summary', 'created', ',', 'users', ' ', 'summary', 'document', ' ', 'understand', 'complete', 'content', ',', ' ', 'saving', 'lot', 'time', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [summary, users, the summary document, the complete content, lot, time] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 138 --> Intelligent  summarization process is suited for batch  process as against to real time processing. 

 TOKEN ---> Intelligent
 LEMA ---> intelligent
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> summarization
 LEMA ---> summarization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> suited
 LEMA ---> suit
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> batch
 LEMA ---> batch
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> against
 LEMA ---> against
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> real
 LEMA ---> real
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Intelligent', ' ', 'summarization', 'process', 'suited', 'batch', ' ', 'process', 'real', 'time', 'processing', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Intelligent  summarization process, batch  process, real time processing] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 139 --> 2.3.1.3 PII Identification Personally Identifiable Information belongs  to an individual and there are regulations,  such as GDPR, which mandates the  protection of PI information. 

 TOKEN ---> 2.3.1.3
 LEMA ---> 2.3.1.3
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PII
 LEMA ---> PII
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Identification
 LEMA ---> Identification
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Personally
 LEMA ---> personally
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Identifiable
 LEMA ---> Identifiable
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Information
 LEMA ---> Information
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> belongs
 LEMA ---> belong
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> individual
 LEMA ---> individual
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> there
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> regulations
 LEMA ---> regulation
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> GDPR
 LEMA ---> GDPR
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mandates
 LEMA ---> mandate
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> protection
 LEMA ---> protection
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['2.3.1.3', 'PII', 'Identification', 'Personally', 'Identifiable', 'Information', 'belongs', ' ', 'individual', 'regulations', ',', ' ', 'GDPR', ',', 'mandates', ' ', 'protection', 'PI', 'information', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

2.3.1.3==> CARDINAL


GDPR==> ORG


PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [2.3.1.3 PII Identification Personally Identifiable Information, an individual, regulations, GDPR, the  protection, PI information] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 140 --> If PII is not  protected it might lead to data breach, loss  of customer trust, and incur high penalty  and legal issues. 

 TOKEN ---> If
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PII
 LEMA ---> PII
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> protected
 LEMA ---> protect
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> might
 LEMA ---> might
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> lead
 LEMA ---> lead
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> data
 LEMA ---> datum
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> breach
 LEMA ---> breach
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> loss
 LEMA ---> loss
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> customer
 LEMA ---> customer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trust
 LEMA ---> trust
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> incur
 LEMA ---> incur
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> high
 LEMA ---> high
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> penalty
 LEMA ---> penalty
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> legal
 LEMA ---> legal
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> issues
 LEMA ---> issue
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['PII', ' ', 'protected', 'lead', 'data', 'breach', ',', 'loss', ' ', 'customer', 'trust', ',', 'incur', 'high', 'penalty', ' ', 'legal', 'issues', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

PII==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [PII, it, data breach, customer trust, legal issues] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 141 --> Identifying PI information  in unstructured content is a difficult and  challenging task.   

 TOKEN ---> Identifying
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unstructured
 LEMA ---> unstructured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> difficult
 LEMA ---> difficult
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> challenging
 LEMA ---> challenge
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> task
 LEMA ---> task
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Identifying', 'PI', 'information', ' ', 'unstructured', 'content', 'difficult', ' ', 'challenging', 'task', '.', ' ']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [PI, unstructured content, a difficult and  challenging task] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 142 --> An NLP model can be trained which  can identify PI information in a content. 

 TOKEN ---> An
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'model', 'trained', ' ', 'identify', 'PI', 'information', 'content', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

NLP==> ORG


PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [An NLP model, which  can identify PI information, a content] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 143 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 144 --> Already, trained models are available,  which helps in identifying standard PI  information such as customer name,  zip code etc. 

 TOKEN ---> Already
 LEMA ---> already
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> available
 LEMA ---> available
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> helps
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identifying
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> standard
 LEMA ---> standard
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> customer
 LEMA ---> customer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> zip
 LEMA ---> zip
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> code
 LEMA ---> code
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [',', 'trained', 'models', 'available', ',', ' ', 'helps', 'identifying', 'standard', 'PI', ' ', 'information', 'customer', ',', ' ', 'zip', 'code', 'etc', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [trained models, standard PI  information, customer name] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 145 --> These AI models can be  contextualized to identify PI information  from a content. 

 TOKEN ---> These
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> contextualized
 LEMA ---> contextualize
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['AI', 'models', ' ', 'contextualized', 'identify', 'PI', 'information', ' ', 'content', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [These AI models, PI information, a content] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 146 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 147 --> Once content with PI information is  identified, it can be encrypted or the  content with PI information can be  attached stringent ACL or the content can  be brought under retention or all of these  can be done to ensure the content with PI  information is properly protected. 

 TOKEN ---> Once
 LEMA ---> once
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> encrypted
 LEMA ---> encrypt
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> attached
 LEMA ---> attach
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> stringent
 LEMA ---> stringent
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ACL
 LEMA ---> ACL
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> brought
 LEMA ---> bring
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> under
 LEMA ---> under
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> retention
 LEMA ---> retention
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> all
 LEMA ---> all
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> done
 LEMA ---> do
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ensure
 LEMA ---> ensure
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> PI
 LEMA ---> PI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> properly
 LEMA ---> properly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> protected
 LEMA ---> protect
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['content', 'PI', 'information', ' ', 'identified', ',', 'encrypted', ' ', 'content', 'PI', 'information', ' ', 'attached', 'stringent', 'ACL', 'content', ' ', 'brought', 'retention', ' ', 'ensure', 'content', 'PI', ' ', 'information', 'properly', 'protected', '.']

 TOTAL FILTERED TOKENS ==> 28 


 --- NER --- 

PI==> ORG


PI==> ORG


ACL==> ORG


PI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Once content, PI information, it, the  content, PI information, stringent ACL, the content, retention, the content, PI  information] 

 TOTAL NOUN CHUNKS --> 10
 ************************************************** 

sentence 148 -->  2.3.2 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 2.3.2
 LEMA ---> 2.3.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '2.3.2']

 TOTAL FILTERED TOKENS ==> 2 


 --- NER --- 

2.3.2==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 149 --> More Implementation Scenarios There can be additional NLP  implementation scenarios. 

 TOKEN ---> More
 LEMA ---> More
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> There
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> additional
 LEMA ---> additional
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> nlp
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Implementation', 'Scenarios', 'additional', 'NLP', ' ', 'implementation', 'scenarios', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [More Implementation Scenarios, additional NLP  implementation scenarios] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 150 --> Analyzing the  risk in contract or agreements is one such  scenario. 

 TOKEN ---> Analyzing
 LEMA ---> analyze
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> risk
 LEMA ---> risk
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> contract
 LEMA ---> contract
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> agreements
 LEMA ---> agreement
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> one
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> scenario
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Analyzing', ' ', 'risk', 'contract', 'agreements', ' ', 'scenario', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

one==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the  risk, contract, agreements, one such  scenario] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 151 --> NLP can be trained to identify  risky terms or phrases and based on the  occurrences of risky terms, the contract or  agreement can be classified as risky. 

 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> risky
 LEMA ---> risky
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> based
 LEMA ---> base
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> occurrences
 LEMA ---> occurrence
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> risky
 LEMA ---> risky
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> contract
 LEMA ---> contract
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> agreement
 LEMA ---> agreement
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classified
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> risky
 LEMA ---> risky
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'trained', 'identify', ' ', 'risky', 'terms', 'phrases', 'based', ' ', 'occurrences', 'risky', 'terms', ',', 'contract', ' ', 'agreement', 'classified', 'risky', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NLP, risky terms, phrases, the  occurrences, risky terms, the contract or  agreement] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 152 --> Classifying a content in a particular  taxonomy is also one such implementation. 

 TOKEN ---> Classifying
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> particular
 LEMA ---> particular
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> taxonomy
 LEMA ---> taxonomy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> also
 LEMA ---> also
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> one
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Classifying', 'content', 'particular', ' ', 'taxonomy', 'implementation', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

one==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [a content, a particular  taxonomy, one such implementation] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 153 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 154 --> Each level of taxonomy can be identified  with specific terms or contextual phrases. 

 TOKEN ---> Each
 LEMA ---> each
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> level
 LEMA ---> level
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> taxonomy
 LEMA ---> taxonomy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> specific
 LEMA ---> specific
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> contextual
 LEMA ---> contextual
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['level', 'taxonomy', 'identified', ' ', 'specific', 'terms', 'contextual', 'phrases', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Each level, taxonomy, specific terms, contextual phrases] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 155 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 156 --> An NLP model can be trained which  will classify new or unseen content to a  taxonomy term.   

 TOKEN ---> An
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classify
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> taxonomy
 LEMA ---> taxonomy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> term
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'model', 'trained', ' ', 'classify', 'new', 'unseen', 'content', ' ', 'taxonomy', 'term', '.', ' ']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [An NLP model, new or unseen content, a  taxonomy term] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 157 --> Similarly, relevancy of a search result can  be improved by query enrichment. 

 TOKEN ---> Similarly
 LEMA ---> similarly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> relevancy
 LEMA ---> relevancy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> search
 LEMA ---> search
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> result
 LEMA ---> result
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> improved
 LEMA ---> improve
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> query
 LEMA ---> query
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> enrichment
 LEMA ---> enrichment
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Similarly', ',', 'relevancy', 'search', 'result', ' ', 'improved', 'query', 'enrichment', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [relevancy, a search result, query enrichment] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 158 --> A  search query before executing against a  search engine, can be analyzed. 

 TOKEN ---> A
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> search
 LEMA ---> search
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> query
 LEMA ---> query
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> before
 LEMA ---> before
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> executing
 LEMA ---> execute
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> against
 LEMA ---> against
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> search
 LEMA ---> search
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> analyzed
 LEMA ---> analyze
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'search', 'query', 'executing', ' ', 'search', 'engine', ',', 'analyzed', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [A  search query, a  search engine] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 159 --> Entities or  context from the query can be identified   

 TOKEN ---> Entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> context
 LEMA ---> context
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> query
 LEMA ---> query
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Entities', ' ', 'context', 'query', 'identified', ' ']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Entities, the query] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 160 --> and then the query can be enriched with  additional selective criteria to get relevant  search results. 

 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> query
 LEMA ---> query
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> enriched
 LEMA ---> enrich
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> additional
 LEMA ---> additional
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> selective
 LEMA ---> selective
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> criteria
 LEMA ---> criterion
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> get
 LEMA ---> get
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> relevant
 LEMA ---> relevant
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> search
 LEMA ---> search
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> results
 LEMA ---> result
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['query', 'enriched', ' ', 'additional', 'selective', 'criteria', 'relevant', ' ', 'search', 'results', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the query, additional selective criteria, relevant  search results] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 161 --> There can be many other NLP  implementations in Content Services  Platforms. 

 TOKEN ---> There
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> many
 LEMA ---> many
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> other
 LEMA ---> other
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> implementations
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Platforms
 LEMA ---> Platforms
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', ' ', 'implementations', 'Content', 'Services', ' ', 'Platforms', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

NLP==> ORG


Content Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [many other NLP  implementations, Content Services,  Platforms] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 162 --> Only few are discussed here. 

 TOKEN ---> Only
 LEMA ---> only
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> few
 LEMA ---> few
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> discussed
 LEMA ---> discuss
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> here
 LEMA ---> here
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['discussed', '.']

 TOTAL FILTERED TOKENS ==> 2 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 163 --> External Document © 2019 Infosys Limited External Document 

 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['External', 'Document', '©', '2019', 'Infosys', 'Limited', 'External', 'Document']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

Infosys Limited External Document==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [External Document © 2019 Infosys Limited External Document] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 164 --> © 2019 Infosys Limited   

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', ' ']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

Infosys Limited==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [© 2019 Infosys Limited] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 165 --> This section discusses a high level process  for implementing scenarios which are  discussed above. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> section
 LEMA ---> section
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> discusses
 LEMA ---> discuss
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> high
 LEMA ---> high
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> level
 LEMA ---> level
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implementing
 LEMA ---> implement
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenarios
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> discussed
 LEMA ---> discuss
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> above
 LEMA ---> above
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['section', 'discusses', 'high', 'level', 'process', ' ', 'implementing', 'scenarios', ' ', 'discussed', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This section, a high level process, scenarios] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 166 --> 3.1 Getting Labeled Content  To train AI model, labeled content is  required. 

 TOKEN ---> 3.1
 LEMA ---> 3.1
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Getting
 LEMA ---> getting
 POS TAG ---> AUX
 TAG  ---> VBG
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> train
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> required
 LEMA ---> require
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['3.1', 'Getting', 'Labeled', 'Content', ' ', 'train', 'AI', 'model', ',', 'labeled', 'content', ' ', 'required', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

3.1==> CARDINAL


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [3.1 Getting Labeled Content, AI model, labeled content] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 167 --> Most of the time, labeled content  is collected from production environment  and because of this, analyzing the content  and building AI model from the content  needs to be done in secured way. 

 TOKEN ---> Most
 LEMA ---> Most
 POS TAG ---> ADJ
 TAG  ---> JJS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  oprd
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> collected
 LEMA ---> collect
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> production
 LEMA ---> production
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> environment
 LEMA ---> environment
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> because
 LEMA ---> because
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> analyzing
 LEMA ---> analyze
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> building
 LEMA ---> build
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> done
 LEMA ---> do
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> secured
 LEMA ---> secured
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> way
 LEMA ---> way
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['time', ',', 'labeled', 'content', ' ', 'collected', 'production', 'environment', ' ', ',', 'analyzing', 'content', ' ', 'building', 'AI', 'model', 'content', ' ', 'needs', 'secured', 'way', '.']

 TOTAL FILTERED TOKENS ==> 22 


 --- NER --- 

AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the time, content, production environment, the content, AI model, the content, secured way] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 168 --> Giving  access only to few developers, masking the  content (if possible), are some of the ways  to secure the labeled content. 

 TOKEN ---> Giving
 LEMA ---> give
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> access
 LEMA ---> access
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> only
 LEMA ---> only
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  dative
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> few
 LEMA ---> few
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> developers
 LEMA ---> developer
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> masking
 LEMA ---> mask
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> (
 LEMA ---> (
 POS TAG ---> PUNCT
 TAG  ---> -LRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> if
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> possible
 LEMA ---> possible
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> )
 LEMA ---> )
 POS TAG ---> PUNCT
 TAG  ---> -RRB-
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> some
 LEMA ---> some
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ways
 LEMA ---> way
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> secure
 LEMA ---> secure
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Giving', ' ', 'access', 'developers', ',', 'masking', ' ', 'content', '(', 'possible', ')', ',', 'ways', ' ', 'secure', 'labeled', 'content', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [access, few developers, the  content, the ways, the labeled content] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 169 -->  3.2 

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> 3.2
 LEMA ---> 3.2
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', '3.2']

 TOTAL FILTERED TOKENS ==> 2 


 --- NER --- 

3.2==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 170 --> Processing training data Labeled content needs to be processed  before it can be used for training. 

 TOKEN ---> Processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> training
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> data
 LEMA ---> datum
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processed
 LEMA ---> process
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> before
 LEMA ---> before
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> training
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Processing', 'training', 'data', 'Labeled', 'content', 'needs', 'processed', ' ', 'training', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

Labeled==> PERSON


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Processing training data, Labeled content, it, training] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 171 --> What  processing is required, depends on which  AI model will be trained. 

 TOKEN ---> What
 LEMA ---> what
 POS TAG ---> PRON
 TAG  ---> WP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> processing
 LEMA ---> processing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> required
 LEMA ---> require
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> depends
 LEMA ---> depend
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'processing', 'required', ',', 'depends', ' ', 'AI', 'model', 'trained', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [What,  processing,  AI model] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 172 --> For training NER model, an annotation tool  is required. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tool
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> required
 LEMA ---> require
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['training', 'NER', 'model', ',', 'annotation', 'tool', ' ', 'required', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [NER model, an annotation tool] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 173 --> There are annotation tools such  as Brat, tagtog, prodigy etc., using which  the entities in the labeled content, can  be annotated and relationship between  the different entities can be established. 

 TOKEN ---> There
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tools
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Brat
 LEMA ---> Brat
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagtog
 LEMA ---> tagtog
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> prodigy
 LEMA ---> prodigy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> etc
 LEMA ---> etc
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> X
 TAG  ---> FW
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dative
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotated
 LEMA ---> annotate
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> relationship
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> between
 LEMA ---> between
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> established
 LEMA ---> establish
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['annotation', 'tools', ' ', 'Brat', ',', 'tagtog', ',', 'prodigy', 'etc', '.', ',', ' ', 'entities', 'labeled', 'content', ',', ' ', 'annotated', 'relationship', ' ', 'different', 'entities', 'established', '.']

 TOTAL FILTERED TOKENS ==> 24 


 --- NER --- 

Brat==> GPE


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [annotation tools, Brat, tagtog, prodigy, the entities, the labeled content, the different entities] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 174 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 175 --> Depending on the file format supported  by the tool, the labeled content needs to  be converted into the different format. 

 TOKEN ---> Depending
 LEMA ---> depend
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> format
 LEMA ---> format
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> supported
 LEMA ---> support
 POS TAG ---> VERB
 TAG  ---> VBD
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tool
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> converted
 LEMA ---> convert
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> format
 LEMA ---> format
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Depending', 'file', 'format', 'supported', ' ', 'tool', ',', 'labeled', 'content', 'needs', ' ', 'converted', 'different', 'format', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the file format, the tool, the labeled content, the different format] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 176 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 177 --> For example, an audio file needs to be  converted into the text file using “speech- to-text” plug-in, and then it can be used for  annotation by the annotation tool. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> audio
 LEMA ---> audio
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> needs
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> converted
 LEMA ---> convert
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> speech-
 LEMA ---> speech-
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> PUNCT
 TAG  ---> HYPH
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> plug
 LEMA ---> plug
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> PUNCT
 TAG  ---> HYPH
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  prt
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tool
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ',', 'audio', 'file', 'needs', ' ', 'converted', 'text', 'file', '“', 'speech-', '-', 'text', '”', 'plug', '-', ',', ' ', 'annotation', 'annotation', 'tool', '.']

 TOTAL FILTERED TOKENS ==> 22 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, an audio file, the text file, text, it,  annotation, the annotation tool] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 178 --> During  the annotation, entities are identified and  tagged with an entity name. 

 TOKEN ---> During
 LEMA ---> during
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBD
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entity
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'annotation', ',', 'entities', 'identified', ' ', 'tagged', 'entity', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the annotation, entities, an entity name] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 179 --> For example,  an employee name can be identified  and tagged to entity name “Person”. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dep
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> employee
 LEMA ---> employee
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tagged
 LEMA ---> tag
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entity
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Person
 LEMA ---> Person
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ',', ' ', 'employee', 'identified', ' ', 'tagged', 'entity', '“', 'Person', '”', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, an employee name, entity name “Person] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 180 --> For  accurate results, relationship between the  entities can be established. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> accurate
 LEMA ---> accurate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> results
 LEMA ---> result
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> relationship
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> between
 LEMA ---> between
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> established
 LEMA ---> establish
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'accurate', 'results', ',', 'relationship', ' ', 'entities', 'established', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [accurate results, relationship, the  entities] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 181 --> For example,  there are two entities, employee name as  “person” and a bank name as “organization”  in one sentence. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> there
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> two
 LEMA ---> two
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> employee
 LEMA ---> employee
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> person
 LEMA ---> person
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> bank
 LEMA ---> bank
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> name
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> organization
 LEMA ---> organization
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> one
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sentence
 LEMA ---> sentence
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['example', ',', ' ', 'entities', ',', 'employee', ' ', '“', 'person', '”', 'bank', '“', 'organization', '”', ' ', 'sentence', '.']

 TOTAL FILTERED TOKENS ==> 17 


 --- NER --- 

two==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, two entities, employee name,  “person, a bank name, organization, one sentence] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 182 --> One of the possible  relationships between these entities,  can be “works at”. 

 TOKEN ---> One
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> possible
 LEMA ---> possible
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> relationships
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> between
 LEMA ---> between
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> “
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ``
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> works
 LEMA ---> work
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> at
 LEMA ---> at
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ”
 LEMA ---> "
 POS TAG ---> PUNCT
 TAG  ---> ''
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['possible', ' ', 'relationships', 'entities', ',', ' ', '“', 'works', '”', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

One==> CARDINAL


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the possible  relationships, these entities] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 183 --> Relationship helps in  extracting the information accurately. 

 TOKEN ---> Relationship
 LEMA ---> relationship
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> helps
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> extracting
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accurately
 LEMA ---> accurately
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Relationship', 'helps', ' ', 'extracting', 'information', 'accurately', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Relationship, the information] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 184 --> More  the annotation of content, more will the  training and hence, more will be accuracy. 

 TOKEN ---> More
 LEMA ---> More
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> training
 LEMA ---> training
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> hence
 LEMA ---> hence
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accuracy
 LEMA ---> accuracy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'annotation', 'content', ',', ' ', 'training', ',', 'accuracy', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [content, more will the  training, accuracy] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 185 --> For training categorizer model, business  terms, phrases or sentences which helps  in classifying the content in that category  are identified. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sentences
 LEMA ---> sentence
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> helps
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classifying
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['training', 'categorizer', 'model', ',', 'business', ' ', 'terms', ',', 'phrases', 'sentences', 'helps', ' ', 'classifying', 'content', 'category', ' ', 'identified', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [categorizer model, business  terms, phrases, sentences, the content, that category] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 186 --> Terms identified for different  categories are listed in plain text file. 

 TOKEN ---> Terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identified
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> different
 LEMA ---> different
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> categories
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> listed
 LEMA ---> list
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> plain
 LEMA ---> plain
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Terms', 'identified', 'different', ' ', 'categories', 'listed', 'plain', 'text', 'file', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Terms, different  categories, plain text file] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 187 --> This  file is then used for training the categorizer  model. 

 TOKEN ---> This
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'file', 'training', 'categorizer', ' ', 'model', '.']

 TOTAL FILTERED TOKENS ==> 7 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [This  file, the categorizer,  model] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 188 --> If AI model need to be trained for more  than one language, then it is better to train  language specific AI models. 

 TOKEN ---> If
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> than
 LEMA ---> than
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> one
 LEMA ---> one
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> language
 LEMA ---> language
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> better
 LEMA ---> well
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> train
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> language
 LEMA ---> language
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> specific
 LEMA ---> specific
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> ai
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['AI', 'model', 'need', 'trained', ' ', 'language', ',', 'better', 'train', ' ', 'language', 'specific', 'AI', 'models', '.']

 TOTAL FILTERED TOKENS ==> 15 


 --- NER --- 

AI==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [AI model, one language, it, language specific AI models] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 189 --> 3.3 Building AI models For training NER model, once annotation  of labeled content is done, the files need  to be converted into a machine readable  format, which NLP engine understand. 

 TOKEN ---> 3.3
 LEMA ---> 3.3
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Building
 LEMA ---> building
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> models
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> once
 LEMA ---> once
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> done
 LEMA ---> do
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> files
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> converted
 LEMA ---> convert
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> machine
 LEMA ---> machine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> readable
 LEMA ---> readable
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> format
 LEMA ---> format
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> understand
 LEMA ---> understand
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['3.3', 'Building', 'AI', 'models', 'training', 'NER', 'model', ',', 'annotation', ' ', 'labeled', 'content', ',', 'files', 'need', ' ', 'converted', 'machine', 'readable', ' ', 'format', ',', 'NLP', 'engine', 'understand', '.']

 TOTAL FILTERED TOKENS ==> 26 


 --- NER --- 

3.3==> CARDINAL


Building AI==> ORG


NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [3.3 Building AI models, NER model, labeled content, the files, a machine readable  format, NLP engine] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 190 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 191 --> Most of the annotation tools offers APIs  to convert the annotation format, into the  machine readable format. 

 TOKEN ---> Most
 LEMA ---> Most
 POS TAG ---> ADJ
 TAG  ---> JJS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tools
 LEMA ---> tool
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> offers
 LEMA ---> offer
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> APIs
 LEMA ---> api
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> convert
 LEMA ---> convert
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> annotation
 LEMA ---> annotation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> format
 LEMA ---> format
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> into
 LEMA ---> into
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> machine
 LEMA ---> machine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> readable
 LEMA ---> readable
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> format
 LEMA ---> format
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['annotation', 'tools', 'offers', 'APIs', ' ', 'convert', 'annotation', 'format', ',', ' ', 'machine', 'readable', 'format', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the annotation tools, APIs, the annotation format, the  machine readable format] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 192 --> Once converted,  these files are then fed to NLP engine,  which in turn, internally build an AI model. 

 TOKEN ---> Once
 LEMA ---> once
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> converted
 LEMA ---> convert
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> these
 LEMA ---> these
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> files
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> are
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBP
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> fed
 LEMA ---> feed
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> which
 LEMA ---> which
 POS TAG ---> DET
 TAG  ---> WDT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> turn
 LEMA ---> turn
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> internally
 LEMA ---> internally
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> build
 LEMA ---> build
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['converted', ',', ' ', 'files', 'fed', 'NLP', 'engine', ',', ' ', 'turn', ',', 'internally', 'build', 'AI', 'model', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

NLP==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [these files, NLP engine, turn, an AI model] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 193 --> For training categorizer model, the text file,  listing category mapped to business terms,  phrases or sentences, is fed to NLP engine.   

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> training
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> text
 LEMA ---> text
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> file
 LEMA ---> file
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> listing
 LEMA ---> list
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mapped
 LEMA ---> map
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> business
 LEMA ---> business
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> terms
 LEMA ---> term
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> phrases
 LEMA ---> phrase
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sentences
 LEMA ---> sentence
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> fed
 LEMA ---> feed
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> nlp
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['training', 'categorizer', 'model', ',', 'text', 'file', ',', ' ', 'listing', 'category', 'mapped', 'business', 'terms', ',', ' ', 'phrases', 'sentences', ',', 'fed', 'NLP', 'engine', '.', ' ']

 TOTAL FILTERED TOKENS ==> 23 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [categorizer model, the text file, category, business terms,  phrases, sentences, NLP engine] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 194 --> The NLP engine then internally build an AI  model. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> internally
 LEMA ---> internally
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> build
 LEMA ---> build
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['NLP', 'engine', 'internally', 'build', 'AI', ' ', 'model', '.']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

NLP==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The NLP engine, an AI  model] 

 TOTAL NOUN CHUNKS --> 2
 ************************************************** 

sentence 195 --> 3.4 Testing AI Model From the labeled content, a sub-set can be  used to test the accuracy of the trained AI  model. 

 TOKEN ---> 3.4
 LEMA ---> 3.4
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Testing
 LEMA ---> Testing
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Model
 LEMA ---> Model
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> From
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sub
 LEMA ---> sub
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> set
 LEMA ---> set
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> used
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> test
 LEMA ---> test
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accuracy
 LEMA ---> accuracy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['3.4', 'Testing', 'AI', 'Model', 'labeled', 'content', ',', 'sub', '-', 'set', ' ', 'test', 'accuracy', 'trained', 'AI', ' ', 'model', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

3.4==> CARDINAL


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [3.4 Testing AI Model, the labeled content, the accuracy, the trained AI  model] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 196 --> The content whose classification or  entities to be extracted, is already known  and is subjected to the AI model. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> whose
 LEMA ---> whose
 POS TAG ---> DET
 TAG  ---> WP$
 DEPENDENCY  --->  poss
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classification
 LEMA ---> classification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extracted
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> already
 LEMA ---> already
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> known
 LEMA ---> know
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> subjected
 LEMA ---> subject
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['content', 'classification', ' ', 'entities', 'extracted', ',', 'known', ' ', 'subjected', 'AI', 'model', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The content, whose classification, the AI model] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 197 --> If the  AI model is able to correctly identify the  category or extract the information, the AI  model is trained with sufficient accuracy  and hence can be deployed for production  use. 

 TOKEN ---> If
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> able
 LEMA ---> able
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> correctly
 LEMA ---> correctly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identify
 LEMA ---> identify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> category
 LEMA ---> category
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extract
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> sufficient
 LEMA ---> sufficient
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accuracy
 LEMA ---> accuracy
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> hence
 LEMA ---> hence
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> deployed
 LEMA ---> deploy
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> production
 LEMA ---> production
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> use
 LEMA ---> use
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'AI', 'model', 'able', 'correctly', 'identify', ' ', 'category', 'extract', 'information', ',', 'AI', ' ', 'model', 'trained', 'sufficient', 'accuracy', ' ', 'deployed', 'production', ' ', 'use', '.']

 TOTAL FILTERED TOKENS ==> 23 


 --- NER --- 

AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the  AI model, the  category, the information, the AI  model, production  use] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 198 --> If the AI model does not perform  adequately in this test run, then the AI  model need to be re-trained with the  additional labeled content. 

 TOKEN ---> If
 LEMA ---> if
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> does
 LEMA ---> do
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> perform
 LEMA ---> perform
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> adequately
 LEMA ---> adequately
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> test
 LEMA ---> test
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> run
 LEMA ---> run
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> then
 LEMA ---> then
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> need
 LEMA ---> need
 POS TAG ---> VERB
 TAG  ---> VBP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> re
 LEMA ---> re
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> -
 LEMA ---> -
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> additional
 LEMA ---> additional
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> labeled
 LEMA ---> label
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['AI', 'model', 'perform', ' ', 'adequately', 'test', 'run', ',', 'AI', ' ', 'model', 'need', '-', 'trained', ' ', 'additional', 'labeled', 'content', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

AI==> ORG


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the AI model, this test run, the AI  model, the  additional labeled content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 199 --> 3.5 Post Processor NLP engine, with trained AL model,  can classify or extract the entities from  new or unseen content. 

 TOKEN ---> 3.5
 LEMA ---> 3.5
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Post
 LEMA ---> Post
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Processor
 LEMA ---> Processor
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> engine
 LEMA ---> engine
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AL
 LEMA ---> AL
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classify
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extract
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> entities
 LEMA ---> entity
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['3.5', 'Post', 'Processor', 'NLP', 'engine', ',', 'trained', 'AL', 'model', ',', ' ', 'classify', 'extract', 'entities', ' ', 'new', 'unseen', 'content', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

3.5==> CARDINAL


NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [3.5 Post Processor NLP engine, trained AL model, the entities, new or unseen content] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 200 --> To process the  classification or extraction result of the  NLP, a post processer is required. 

 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> process
 LEMA ---> process
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> classification
 LEMA ---> classification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extraction
 LEMA ---> extraction
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> result
 LEMA ---> result
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  amod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> post
 LEMA ---> post
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processer
 LEMA ---> processer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> required
 LEMA ---> require
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['process', ' ', 'classification', 'extraction', 'result', ' ', 'NLP', ',', 'post', 'processer', 'required', '.']

 TOTAL FILTERED TOKENS ==> 12 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the  classification or extraction result, the  NLP, a post processer] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 201 --> For  example, in case of metadata identification,  a categorizer model will give the list of  metadata value with their probabilities. 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> example
 LEMA ---> example
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> case
 LEMA ---> case
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> identification
 LEMA ---> identification
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> will
 LEMA ---> will
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> give
 LEMA ---> give
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> list
 LEMA ---> list
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> value
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> their
 LEMA ---> their
 POS TAG ---> PRON
 TAG  ---> PRP$
 DEPENDENCY  --->  poss
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> probabilities
 LEMA ---> probability
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'example', ',', 'case', 'metadata', 'identification', ',', ' ', 'categorizer', 'model', 'list', ' ', 'metadata', 'value', 'probabilities', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [example, case, metadata identification,  a categorizer model, the list,  metadata value, their probabilities] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 202 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 203 --> Post processor should select the metadata  value with highest probability. 

 TOKEN ---> Post
 LEMA ---> Post
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processor
 LEMA ---> processor
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> should
 LEMA ---> should
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> select
 LEMA ---> select
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> metadata
 LEMA ---> metadata
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> value
 LEMA ---> value
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> highest
 LEMA ---> high
 POS TAG ---> ADJ
 TAG  ---> JJS
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> probability
 LEMA ---> probability
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Post', 'processor', 'select', 'metadata', ' ', 'value', 'highest', 'probability', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Post processor, the metadata  value, highest probability] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 204 --> Processing  logic of Post processor depends on the  implementation scenario. 

 TOKEN ---> Processing
 LEMA ---> process
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  csubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> logic
 LEMA ---> logic
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Post
 LEMA ---> Post
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processor
 LEMA ---> processor
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> depends
 LEMA ---> depend
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> scenario
 LEMA ---> scenario
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Processing', ' ', 'logic', 'Post', 'processor', 'depends', ' ', 'implementation', 'scenario', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [logic, Post processor, the  implementation scenario] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 205 --> 3.6 Execution Once the AI model is trained and tested  and post processor is developed, the  pipeline is ready to classify or extract  the information from new or unseen  documents. 

 TOKEN ---> 3.6
 LEMA ---> 3.6
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Execution
 LEMA ---> execution
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Once
 LEMA ---> once
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> AI
 LEMA ---> AI
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trained
 LEMA ---> train
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> tested
 LEMA ---> test
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> post
 LEMA ---> post
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> processor
 LEMA ---> processor
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> developed
 LEMA ---> develop
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> pipeline
 LEMA ---> pipeline
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ready
 LEMA ---> ready
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> classify
 LEMA ---> classify
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> extract
 LEMA ---> extract
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unseen
 LEMA ---> unseen
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> documents
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['3.6', 'Execution', 'AI', 'model', 'trained', 'tested', ' ', 'post', 'processor', 'developed', ',', ' ', 'pipeline', 'ready', 'classify', 'extract', ' ', 'information', 'new', 'unseen', ' ', 'documents', '.']

 TOTAL FILTERED TOKENS ==> 23 


 --- NER --- 

3.6==> CARDINAL


AI==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [3.6 Execution, the AI model, post processor, the  pipeline, the information, new or unseen  documents] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 206 --> The new content can be  subjected to NER model or categorizer  model or both depending upon the use  case. 

 TOKEN ---> The
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> new
 LEMA ---> new
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> subjected
 LEMA ---> subject
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NER
 LEMA ---> NER
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> categorizer
 LEMA ---> categorizer
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> model
 LEMA ---> model
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> both
 LEMA ---> both
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> depending
 LEMA ---> depend
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> upon
 LEMA ---> upon
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> use
 LEMA ---> use
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> case
 LEMA ---> case
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['new', 'content', ' ', 'subjected', 'NER', 'model', 'categorizer', ' ', 'model', 'depending', 'use', ' ', 'case', '.']

 TOTAL FILTERED TOKENS ==> 14 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [The new content, NER model, categorizer  model, the use  case] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 207 --> 3 High Level Implementation Steps External Document © 2019 Infosys Limited External Document 

 TOKEN ---> 3
 LEMA ---> 3
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> High
 LEMA ---> High
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Level
 LEMA ---> Level
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Implementation
 LEMA ---> implementation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Steps
 LEMA ---> Steps
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  punct
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> External
 LEMA ---> External
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Document
 LEMA ---> Document
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  punct
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['3', 'High', 'Level', 'Implementation', 'Steps', 'External', 'Document', '©', '2019', 'Infosys', 'Limited', 'External', 'Document']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

3==> CARDINAL


Infosys Limited External Document==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 208 --> © 2019 Infosys Limited   

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> limit
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', ' ']

 TOTAL FILTERED TOKENS ==> 5 


 --- NER --- 

Infosys Limited==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 209 --> © 2019 Infosys Limited, Bengaluru, India. 

 TOKEN ---> ©
 LEMA ---> ©
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 2019
 LEMA ---> 2019
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Bengaluru
 LEMA ---> Bengaluru
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> India
 LEMA ---> India
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['©', '2019', 'Infosys', 'Limited', ',', 'Bengaluru', ',', 'India', '.']

 TOTAL FILTERED TOKENS ==> 9 


 --- NER --- 

Infosys Limited==> ORG


Bengaluru==> GPE


India==> GPE


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [© 2019 Infosys Limited] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 210 --> All Rights Reserved. 

 TOKEN ---> All
 LEMA ---> all
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Rights
 LEMA ---> Rights
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Reserved
 LEMA ---> Reserved
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Rights', 'Reserved', '.']

 TOTAL FILTERED TOKENS ==> 3 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [All Rights Reserved] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 211 --> Infosys believes the information in this document is accurate as of its publication date; such information is subject to change without notice. 

 TOKEN ---> Infosys
 LEMA ---> infosy
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> believes
 LEMA ---> believe
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accurate
 LEMA ---> accurate
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> its
 LEMA ---> its
 POS TAG ---> PRON
 TAG  ---> PRP$
 DEPENDENCY  --->  poss
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> publication
 LEMA ---> publication
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> date
 LEMA ---> date
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ;
 LEMA ---> ;
 POS TAG ---> PUNCT
 TAG  ---> :
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> subject
 LEMA ---> subject
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> change
 LEMA ---> change
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> without
 LEMA ---> without
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> notice
 LEMA ---> notice
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Infosys', 'believes', 'information', 'document', 'accurate', 'publication', 'date', ';', 'information', 'subject', 'change', 'notice', '.']

 TOTAL FILTERED TOKENS ==> 13 


 --- NER --- 

Infosys==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Infosys, the information, this document, its publication date, such information, change, notice] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 212 --> Infosys  acknowledges the proprietary rights of other companies to the trademarks, product names and such other intellectual property rights mentioned in this document. 

 TOKEN ---> Infosys
 LEMA ---> infosy
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> acknowledges
 LEMA ---> acknowledge
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> proprietary
 LEMA ---> proprietary
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> rights
 LEMA ---> right
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> other
 LEMA ---> other
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> companies
 LEMA ---> company
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> trademarks
 LEMA ---> trademark
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> product
 LEMA ---> product
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> names
 LEMA ---> name
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> such
 LEMA ---> such
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> other
 LEMA ---> other
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> intellectual
 LEMA ---> intellectual
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> property
 LEMA ---> property
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> rights
 LEMA ---> right
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mentioned
 LEMA ---> mention
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Infosys', ' ', 'acknowledges', 'proprietary', 'rights', 'companies', 'trademarks', ',', 'product', 'names', 'intellectual', 'property', 'rights', 'mentioned', 'document', '.']

 TOTAL FILTERED TOKENS ==> 16 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [Infosys, the proprietary rights, other companies, the trademarks, product names, such other intellectual property rights, this document] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 213 --> Except as expressly permitted, neither this  documentation nor any part of it may be reproduced, stored in a retrieval system, or transmitted in any form or by any means, electronic, mechanical, printing, photocopying, recording or otherwise, without the  prior permission of Infosys Limited and/ or any named intellectual property rights holders under this document. 

 TOKEN ---> Except
 LEMA ---> except
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> as
 LEMA ---> as
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> expressly
 LEMA ---> expressly
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> permitted
 LEMA ---> permit
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> neither
 LEMA ---> neither
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> documentation
 LEMA ---> documentation
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> nor
 LEMA ---> nor
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> part
 LEMA ---> part
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> may
 LEMA ---> may
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reproduced
 LEMA ---> reproduce
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> stored
 LEMA ---> store
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> retrieval
 LEMA ---> retrieval
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> system
 LEMA ---> system
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> transmitted
 LEMA ---> transmit
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> form
 LEMA ---> form
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> means
 LEMA ---> mean
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> electronic
 LEMA ---> electronic
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> mechanical
 LEMA ---> mechanical
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> printing
 LEMA ---> printing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> photocopying
 LEMA ---> photocopying
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> recording
 LEMA ---> recording
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> otherwise
 LEMA ---> otherwise
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> without
 LEMA ---> without
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> prior
 LEMA ---> prior
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> permission
 LEMA ---> permission
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Limited
 LEMA ---> Limited
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and/
 LEMA ---> and/
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> or
 LEMA ---> or
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> any
 LEMA ---> any
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> named
 LEMA ---> name
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> intellectual
 LEMA ---> intellectual
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> property
 LEMA ---> property
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> rights
 LEMA ---> right
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> holders
 LEMA ---> holder
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> under
 LEMA ---> under
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> document
 LEMA ---> document
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['expressly', 'permitted', ',', ' ', 'documentation', 'reproduced', ',', 'stored', 'retrieval', 'system', ',', 'transmitted', 'form', 'means', ',', 'electronic', ',', 'mechanical', ',', 'printing', ',', 'photocopying', ',', 'recording', ',', ' ', 'prior', 'permission', 'Infosys', 'Limited', 'and/', 'named', 'intellectual', 'property', 'rights', 'holders', 'document', '.']

 TOTAL FILTERED TOKENS ==> 38 


 --- NER --- 

Infosys Limited==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [neither this  documentation, any part, it, a retrieval system, any form, any means, the  prior permission, Infosys Limited and/, any named intellectual property rights holders, this document] 

 TOTAL NOUN CHUNKS --> 10
 ************************************************** 

sentence 214 -->   

 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 215 --> For more information, contact askus@infosys.com Infosys.com | NYSE: 

 TOKEN ---> For
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> information
 LEMA ---> information
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> contact
 LEMA ---> contact
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> askus@infosys.com
 LEMA ---> askus@infosys.com
 POS TAG ---> X
 TAG  ---> ADD
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys.com
 LEMA ---> Infosys.com
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> |
 LEMA ---> |
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NYSE
 LEMA ---> NYSE
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> :
 LEMA ---> :
 POS TAG ---> PUNCT
 TAG  ---> :
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['information', ',', 'contact', 'askus@infosys.com', 'Infosys.com', '|', 'NYSE', ':']

 TOTAL FILTERED TOKENS ==> 8 


 --- NER --- 

Infosys.com==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [more information] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 216 --> INFY Stay Connected Authors: A senior technology architect within the Digital practice of financial unit at Infosys, Girish Pande, has around 19 years  of experience in Information Technology. 

 TOKEN ---> INFY
 LEMA ---> INFY
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Stay
 LEMA ---> stay
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Connected
 LEMA ---> connected
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Authors
 LEMA ---> author
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> :
 LEMA ---> :
 POS TAG ---> PUNCT
 TAG  ---> :
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> A
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> senior
 LEMA ---> senior
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> technology
 LEMA ---> technology
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> architect
 LEMA ---> architect
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> within
 LEMA ---> within
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Digital
 LEMA ---> Digital
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> practice
 LEMA ---> practice
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> financial
 LEMA ---> financial
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unit
 LEMA ---> unit
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> at
 LEMA ---> at
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Girish
 LEMA ---> Girish
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Pande
 LEMA ---> Pande
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> has
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> around
 LEMA ---> around
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 19
 LEMA ---> 19
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> years
 LEMA ---> year
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> experience
 LEMA ---> experience
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Information
 LEMA ---> Information
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Technology
 LEMA ---> Technology
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['INFY', 'Stay', 'Connected', 'Authors', ':', 'senior', 'technology', 'architect', 'Digital', 'practice', 'financial', 'unit', 'Infosys', ',', 'Girish', 'Pande', ',', '19', 'years', ' ', 'experience', 'Information', 'Technology', '.']

 TOTAL FILTERED TOKENS ==> 24 


 --- NER --- 

Digital==> ORG


Infosys==> ORG


Girish Pande==> ORG


around 19 years==> DATE


Information Technology==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [INFY, Connected Authors, A senior technology architect, the Digital practice, financial unit, Infosys, Girish Pande, around 19 years, experience, Information Technology] 

 TOTAL NOUN CHUNKS --> 10
 ************************************************** 

sentence 217 --> He has played key role in architecting and implementing end to end Content  Services, Enterprise Search, NLP and Automation solutions for various clients across the globe. 

 TOKEN ---> He
 LEMA ---> he
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> has
 LEMA ---> have
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> played
 LEMA ---> play
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> key
 LEMA ---> key
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> role
 LEMA ---> role
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> architecting
 LEMA ---> architecte
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> implementing
 LEMA ---> implement
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> end
 LEMA ---> end
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> end
 LEMA ---> end
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  relcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Enterprise
 LEMA ---> Enterprise
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Search
 LEMA ---> Search
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Automation
 LEMA ---> Automation
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> solutions
 LEMA ---> solution
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> for
 LEMA ---> for
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> various
 LEMA ---> various
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> clients
 LEMA ---> client
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> across
 LEMA ---> across
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> globe
 LEMA ---> globe
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['played', 'key', 'role', 'architecting', 'implementing', 'end', 'end', 'Content', ' ', 'Services', ',', 'Enterprise', 'Search', ',', 'NLP', 'Automation', 'solutions', 'clients', 'globe', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

Content  Services==> ORG


NLP==> ORG


Automation==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [He, key role, end, Content  Services, Enterprise Search, NLP, Automation, solutions, various clients, the globe] 

 TOTAL NOUN CHUNKS --> 10
 ************************************************** 

sentence 218 --> He is an M.Tech. in  Industrial Engineering and Operations Research from IIT Bombay. 

 TOKEN ---> He
 LEMA ---> he
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> an
 LEMA ---> an
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> M.Tech
 LEMA ---> m.tech
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Industrial
 LEMA ---> Industrial
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Engineering
 LEMA ---> Engineering
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Operations
 LEMA ---> Operations
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Research
 LEMA ---> Research
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> IIT
 LEMA ---> IIT
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Bombay
 LEMA ---> Bombay
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['M.Tech', '.', ' ', 'Industrial', 'Engineering', 'Operations', 'Research', 'IIT', 'Bombay', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

Industrial Engineering and Operations Research==> ORG


IIT Bombay==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [He, an M.Tech, Industrial Engineering and Operations Research, IIT Bombay] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 219 --> He can be reached at girish_pande@Infosys.com A Technology Architect with the Digital Practice unit at Infosys, Yamuna Sri Kannaian, has around 13 years of experience  in Information Technology. 

 TOKEN ---> He
 LEMA ---> he
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reached
 LEMA ---> reach
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> at
 LEMA ---> at
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> girish_pande@Infosys.com
 LEMA ---> girish_pande@Infosys.com
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> A
 LEMA ---> A
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Technology
 LEMA ---> technology
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Architect
 LEMA ---> Architect
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> with
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Digital
 LEMA ---> Digital
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Practice
 LEMA ---> Practice
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> unit
 LEMA ---> unit
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> at
 LEMA ---> at
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Infosys
 LEMA ---> Infosys
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Yamuna
 LEMA ---> Yamuna
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Sri
 LEMA ---> Sri
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Kannaian
 LEMA ---> Kannaian
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> has
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> around
 LEMA ---> around
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> 13
 LEMA ---> 13
 POS TAG ---> NUM
 TAG  ---> CD
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> years
 LEMA ---> year
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> experience
 LEMA ---> experience
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Information
 LEMA ---> Information
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Technology
 LEMA ---> Technology
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['reached', 'girish_pande@Infosys.com', 'Technology', 'Architect', 'Digital', 'Practice', 'unit', 'Infosys', ',', 'Yamuna', 'Sri', 'Kannaian', ',', '13', 'years', 'experience', ' ', 'Information', 'Technology', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

girish_pande@Infosys.com A Technology Architect==> ORG


Digital Practice==> ORG


Infosys==> ORG


Yamuna Sri Kannaian==> PERSON


around 13 years==> DATE


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [He, girish_pande@Infosys.com A Technology Architect, the Digital Practice unit, Infosys, Yamuna Sri Kannaian, around 13 years, Information Technology] 

 TOTAL NOUN CHUNKS --> 7
 ************************************************** 

sentence 220 --> She has played various key roles and has wide experience in architecting, designing and  implementing Web applications, Content Services and NLP solutions. 

 TOKEN ---> She
 LEMA ---> she
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> has
 LEMA ---> have
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> played
 LEMA ---> play
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> various
 LEMA ---> various
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> key
 LEMA ---> key
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> roles
 LEMA ---> role
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> has
 LEMA ---> have
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> wide
 LEMA ---> wide
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> experience
 LEMA ---> experience
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> architecting
 LEMA ---> architecte
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> designing
 LEMA ---> designing
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  conj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> implementing
 LEMA ---> implement
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Web
 LEMA ---> web
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> applications
 LEMA ---> application
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  npadvmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> solutions
 LEMA ---> solution
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['played', 'key', 'roles', 'wide', 'experience', 'architecting', ',', 'designing', ' ', 'implementing', 'Web', 'applications', ',', 'Content', 'Services', 'NLP', 'solutions', '.']

 TOTAL FILTERED TOKENS ==> 18 


 --- NER --- 

Content Services==> ORG


NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [She, various key roles, wide experience, designing, Web applications] 

 TOTAL NOUN CHUNKS --> 5
 ************************************************** 

sentence 221 --> She holds a B. Tech. degree on Information  Technology from Anna University. 

 TOKEN ---> She
 LEMA ---> she
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> holds
 LEMA ---> hold
 POS TAG ---> VERB
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> a
 LEMA ---> a
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> B.
 LEMA ---> B.
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Tech
 LEMA ---> Tech
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> degree
 LEMA ---> degree
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> on
 LEMA ---> on
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Information
 LEMA ---> Information
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Technology
 LEMA ---> Technology
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> from
 LEMA ---> from
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Anna
 LEMA ---> Anna
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> University
 LEMA ---> University
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['holds', 'B.', 'Tech', '.', 'degree', 'Information', ' ', 'Technology', 'Anna', 'University', '.']

 TOTAL FILTERED TOKENS ==> 11 


 --- NER --- 

Information  Technology==> PRODUCT


Anna University==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [She, a B. Tech. degree, Information  Technology, Anna University] 

 TOTAL NOUN CHUNKS --> 4
 ************************************************** 

sentence 222 --> She can be reached at Yamuna_kannaian@infosys.com 

 TOKEN ---> She
 LEMA ---> she
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reached
 LEMA ---> reach
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> at
 LEMA ---> at
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Yamuna_kannaian@infosys.com
 LEMA ---> yamuna_kannaian@infosys.com
 POS TAG ---> X
 TAG  ---> ADD
 DEPENDENCY  --->  pobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['reached', 'Yamuna_kannaian@infosys.com']

 TOTAL FILTERED TOKENS ==> 2 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [She] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 223 --> To know more about this paper, please reach out to digital@infosys.com   

 TOKEN ---> To
 LEMA ---> to
 POS TAG ---> PART
 TAG  ---> TO
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> know
 LEMA ---> know
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> more
 LEMA ---> more
 POS TAG ---> ADJ
 TAG  ---> JJR
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> about
 LEMA ---> about
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> this
 LEMA ---> this
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> paper
 LEMA ---> paper
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> please
 LEMA ---> please
 POS TAG ---> INTJ
 TAG  ---> UH
 DEPENDENCY  --->  intj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> reach
 LEMA ---> reach
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> out
 LEMA ---> out
 POS TAG ---> ADP
 TAG  ---> RP
 DEPENDENCY  --->  prt
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> to
 LEMA ---> to
 POS TAG ---> AUX
 TAG  ---> IN
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> digital@infosys.com
 LEMA ---> digital@infosys.com
 POS TAG ---> X
 TAG  ---> ADD
 DEPENDENCY  --->  xcomp
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['know', 'paper', ',', 'reach', 'digital@infosys.com', ' ']

 TOTAL FILTERED TOKENS ==> 6 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [this paper] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

sentence 224 --> Conclusion With above discussion, it is evident that  NLP can play very crucial role in addressing  some of the key challenges encountered  in Content Services Platform. 

 TOKEN ---> Conclusion
 LEMA ---> conclusion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> With
 LEMA ---> with
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> above
 LEMA ---> above
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> discussion
 LEMA ---> discussion
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> it
 LEMA ---> it
 POS TAG ---> PRON
 TAG  ---> PRP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> is
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VBZ
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> evident
 LEMA ---> evident
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  acomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> that
 LEMA ---> that
 POS TAG ---> SCONJ
 TAG  ---> IN
 DEPENDENCY  --->  mark
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> play
 LEMA ---> play
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> very
 LEMA ---> very
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> crucial
 LEMA ---> crucial
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> role
 LEMA ---> role
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> addressing
 LEMA ---> address
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  pcomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> some
 LEMA ---> some
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> of
 LEMA ---> of
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> key
 LEMA ---> key
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> encountered
 LEMA ---> encounter
 POS TAG ---> VERB
 TAG  ---> VBD
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> in
 LEMA ---> in
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  prep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  compound
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Platform
 LEMA ---> Platform
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['Conclusion', 'discussion', ',', 'evident', ' ', 'NLP', 'play', 'crucial', 'role', 'addressing', ' ', 'key', 'challenges', 'encountered', ' ', 'Content', 'Services', 'Platform', '.']

 TOTAL FILTERED TOKENS ==> 19 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [above discussion, it,  NLP, very crucial role, the key challenges, Content Services Platform] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 225 --> There can be  many other challenges, not discussed here,    whichcan be addressed by NLP. 

 TOKEN ---> There
 LEMA ---> there
 POS TAG ---> PRON
 TAG  ---> EX
 DEPENDENCY  --->  expl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  attr
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> many
 LEMA ---> many
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> other
 LEMA ---> other
 POS TAG ---> ADJ
 TAG  ---> JJ
 DEPENDENCY  --->  amod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> challenges
 LEMA ---> challenge
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  attr
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  neg
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> discussed
 LEMA ---> discuss
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  dep
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> here
 LEMA ---> here
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->    
 LEMA --->    
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> whichcan
 LEMA ---> whichcan
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  nsubjpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> be
 LEMA ---> be
 POS TAG ---> AUX
 TAG  ---> VB
 DEPENDENCY  --->  auxpass
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> addressed
 LEMA ---> address
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'challenges', ',', 'discussed', ',', '   ', 'whichcan', 'addressed', 'NLP', '.']

 TOTAL FILTERED TOKENS ==> 10 


 --- NER --- 

NLP==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [many other challenges,    whichcan, NLP] 

 TOTAL NOUN CHUNKS --> 3
 ************************************************** 

sentence 226 --> Using  the capabilities offered by NLP, Content  Services can help users not only save their  time but also, accurately locating and  reusing the content. 

 TOKEN ---> Using
 LEMA ---> use
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  dobj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> capabilities
 LEMA ---> capability
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> offered
 LEMA ---> offer
 POS TAG ---> VERB
 TAG  ---> VBN
 DEPENDENCY  --->  acl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> by
 LEMA ---> by
 POS TAG ---> ADP
 TAG  ---> IN
 DEPENDENCY  --->  agent
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> NLP
 LEMA ---> NLP
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  pobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> Content
 LEMA ---> Content
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  nmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nummod
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> Services
 LEMA ---> Services
 POS TAG ---> PROPN
 TAG  ---> NNPS
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> can
 LEMA ---> can
 POS TAG ---> AUX
 TAG  ---> MD
 DEPENDENCY  --->  aux
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> help
 LEMA ---> help
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> users
 LEMA ---> user
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> not
 LEMA ---> not
 POS TAG ---> PART
 TAG  ---> RB
 DEPENDENCY  --->  preconj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> only
 LEMA ---> only
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> save
 LEMA ---> save
 POS TAG ---> VERB
 TAG  ---> VB
 DEPENDENCY  --->  ccomp
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> their
 LEMA ---> their
 POS TAG ---> PRON
 TAG  ---> PRP$
 DEPENDENCY  --->  poss
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> time
 LEMA ---> time
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> but
 LEMA ---> but
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> also
 LEMA ---> also
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> ,
 LEMA ---> ,
 POS TAG ---> PUNCT
 TAG  ---> ,
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> accurately
 LEMA ---> accurately
 POS TAG ---> ADV
 TAG  ---> RB
 DEPENDENCY  --->  advmod
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> locating
 LEMA ---> locate
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  advcl
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> and
 LEMA ---> and
 POS TAG ---> CCONJ
 TAG  ---> CC
 DEPENDENCY  --->  cc
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN --->  
 LEMA --->  
 POS TAG ---> SPACE
 TAG  ---> _SP
 DEPENDENCY  --->  nsubj
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> True
 ************************************************** 


 TOKEN ---> reusing
 LEMA ---> reuse
 POS TAG ---> VERB
 TAG  ---> VBG
 DEPENDENCY  --->  conj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> the
 LEMA ---> the
 POS TAG ---> DET
 TAG  ---> DT
 DEPENDENCY  --->  det
 ALPHABET  --->  True
 IS STOPWORD ?  ---> True
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> content
 LEMA ---> content
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  dobj
 ALPHABET  --->  True
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> .
 LEMA ---> .
 POS TAG ---> PUNCT
 TAG  ---> .
 DEPENDENCY  --->  punct
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 [' ', 'capabilities', 'offered', 'NLP', ',', 'Content', ' ', 'Services', 'help', 'users', 'save', ' ', 'time', ',', 'accurately', 'locating', ' ', 'reusing', 'content', '.']

 TOTAL FILTERED TOKENS ==> 20 


 --- NER --- 

NLP==> ORG


Content  Services==> ORG


 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [the capabilities, NLP, Content  Services, users, their  time, the content] 

 TOTAL NOUN CHUNKS --> 6
 ************************************************** 

sentence 227 --> https://twitter.com/infosys 

 TOKEN ---> https://twitter.com/infosys
 LEMA ---> https://twitter.com/infosys
 POS TAG ---> X
 TAG  ---> ADD
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['https://twitter.com/infosys']

 TOTAL FILTERED TOKENS ==> 1 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [] 

 TOTAL NOUN CHUNKS --> 0
 ************************************************** 

sentence 228 --> https://www.linkedin.com/company/infosys https://www.youtube.com/Infosys http://www.slideshare.net/Infosys https://www.infosys.com/ 

 TOKEN ---> https://www.linkedin.com/company/infosys
 LEMA ---> https://www.linkedin.com/company/infosy
 POS TAG ---> NOUN
 TAG  ---> NNS
 DEPENDENCY  --->  poss
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> https://www.youtube.com/Infosys
 LEMA ---> https://www.youtube.com/Infosys
 POS TAG ---> PROPN
 TAG  ---> NNP
 DEPENDENCY  --->  appos
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> http://www.slideshare.net/Infosys
 LEMA ---> http://www.slideshare.net/infosys
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  compound
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 TOKEN ---> https://www.infosys.com/
 LEMA ---> https://www.infosys.com/
 POS TAG ---> NOUN
 TAG  ---> NN
 DEPENDENCY  --->  ROOT
 ALPHABET  --->  False
 IS STOPWORD ?  ---> False
 IS SPACE ? ---> False
 ************************************************** 


 --- FILTERED TOKENS --- 

 ['https://www.linkedin.com/company/infosys', 'https://www.youtube.com/Infosys', 'http://www.slideshare.net/Infosys', 'https://www.infosys.com/']

 TOTAL FILTERED TOKENS ==> 4 


 --- NER --- 

 ************************************************** 


 ---- NOUN CHUNKS ---- 

 [https://www.youtube.com/Infosys] 

 TOTAL NOUN CHUNKS --> 1
 ************************************************** 

